<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook original-version='18.1' source-build='2020.3.4 (20203.20.1208.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='trips+ (bixi)' inline='true' name='federated.0h6y8fw1kmriif11ks9so1orza3b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1xgo0qz0fj2fw419yt5td1lsyr9s'>
            <connection class='mysql' dbname='bixi' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.1xgo0qz0fj2fw419yt5td1lsyr9s' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.1xgo0qz0fj2fw419yt5td1lsyr9s' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.1xgo0qz0fj2fw419yt5td1lsyr9s' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.1xgo0qz0fj2fw419yt5td1lsyr9s' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[start_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_station_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[end_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_station_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_member</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_member]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>is_member</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_29763B00D439413D9E2AAEB7C0044F7A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='30-45 Minutes Trips' datatype='integer' name='[30 Minutes Trips (copy)_130604457123897345]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF([is_member] = 0 AND [Calculation_1211186892701106181] &gt; 30 AND [Calculation_1211186892701106181] &lt;= 45) THEN [id] END' />
      </column>
      <column caption='45-60 Minutes Trips' datatype='integer' name='[30-45 Minutes Trips (copy)_130604457124081666]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF([is_member] = 0 AND [Calculation_1211186892701106181] &gt; 45 AND [Calculation_1211186892701106181] &lt;= 60) THEN [id] END' />
      </column>
      <column caption='Trips by members' datatype='integer' name='[Calculation_1211186892696621057]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([is_member] =1) THEN [id] END' />
      </column>
      <column caption='Percentage of trips that were done by members' datatype='real' name='[Calculation_1211186892697133058]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_1211186892696621057])/COUNT([__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A])*100' />
      </column>
      <column caption='Round Trips' datatype='integer' name='[Calculation_1211186892698619907]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([start_station_code] = [end_station_code]) &#13;&#10;THEN [id]&#13;&#10;END' />
      </column>
      <column caption='Percentage of round trips' datatype='real' name='[Calculation_1211186892699238404]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_1211186892698619907])/COUNT([__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A])*100' />
      </column>
      <column caption='Duration Min' datatype='real' name='[Calculation_1211186892701106181]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/60' />
      </column>
      <column caption='Is a member' datatype='boolean' name='[Calculation_1211186892703571975]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[is_member] = 1' />
        <aliases>
          <alias key='false' value='Non-Member' />
          <alias key='true' value='Member' />
        </aliases>
      </column>
      <column caption='30 Minutes Trips' datatype='integer' name='[Calculation_130604457123606528]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF([is_member] = 0 AND [Calculation_1211186892701106181] &lt;= 30) THEN [id] END' />
      </column>
      <column caption='Revenue of 30 Minutes Trips' datatype='real' name='[Calculation_130604457124356099]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_130604457123606528])*2.99' />
      </column>
      <column caption='Total Revenue of Short Single Trips' datatype='real' name='[Calculation_130604457125113862]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_130604457124356099] +&#13;&#10;[Revenue of 30 Minutes Trips (copy)_130604457124651012] +&#13;&#10;[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]' />
      </column>
      <column caption='Percentage revenue of 30 Minutes Trips' datatype='real' name='[Calculation_130604457125335047]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_130604457124356099]/[Calculation_130604457125113862]*100' />
      </column>
      <column caption='Single trips by duration' datatype='string' name='[Calculation_1342354166364774406]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [is_member]=0 AND [Calculation_1211186892701106181] &lt;= 30 &#13;&#10;THEN &quot;30 Min Trip&quot;&#13;&#10;ELSEIF &#13;&#10;([is_member]=0 AND [Calculation_1211186892701106181] &gt;30 AND [Calculation_1211186892701106181] &lt;=45)&#13;&#10;THEN &quot;30-45 Min Trip&quot;&#13;&#10;ELSEIF&#13;&#10;([is_member]=0 AND [Calculation_1211186892701106181] &gt; 45 AND [Calculation_1211186892701106181] &lt;= 60)&#13;&#10;THEN &quot;45-60 Min Trip&quot;&#13;&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Duration Min (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_1211186892701106181]' peg='0' size='2.3' />
      </column>
      <column caption='Percentage revenue of 30-45 Minutes Trips' datatype='real' name='[Percentage revenue of 30 Minutes Trips (copy)_130604457125564424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Revenue of 30 Minutes Trips (copy)_130604457124651012]/[Calculation_130604457125113862]*100' />
      </column>
      <column caption='Percentage revenue of 45-60 Minutes Trips' datatype='real' name='[Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]/[Calculation_130604457125113862]*100' />
      </column>
      <column caption='Revenue of 30-45 Minutes Trips' datatype='real' name='[Revenue of 30 Minutes Trips (copy)_130604457124651012]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([30 Minutes Trips (copy)_130604457123897345])*4.79' />
      </column>
      <column caption='Revenue of 45-60 Minutes Trips' datatype='real' name='[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([30-45 Minutes Trips (copy)_130604457124081666])*7.79' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='datetime' name='[end_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_1211186892701106181]' derivation='Count' name='[cnt:Calculation_1211186892701106181:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1342354166364774406]' derivation='None' name='[none:Calculation_1342354166364774406:nk]' pivot='key' type='nominal' />
      <column-instance column='[Duration Min (bin)]' derivation='None' name='[none:Duration Min (bin):qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1211186892701106181]' derivation='Count' name='[pcto:cnt:Calculation_1211186892701106181:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Duration Min (bin):qk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1211186892696621057]' derivation='Sum' name='[sum:Calculation_1211186892696621057:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1211186892697133058]' derivation='User' name='[usr:Calculation_1211186892697133058:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1211186892699238404]' derivation='User' name='[usr:Calculation_1211186892699238404:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_130604457124356099]' derivation='User' name='[usr:Calculation_130604457124356099:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_130604457125335047]' derivation='User' name='[usr:Calculation_130604457125335047:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percentage revenue of 30 Minutes Trips (copy)_130604457125564424]' derivation='User' name='[usr:Percentage revenue of 30 Minutes Trips (copy)_130604457125564424:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665]' derivation='User' name='[usr:Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Revenue of 30 Minutes Trips (copy)_130604457124651012]' derivation='User' name='[usr:Revenue of 30 Minutes Trips (copy)_130604457124651012:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]' derivation='User' name='[usr:Revenue of 30-45 Minutes Trips (copy)_130604457124818949:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Revenue of 30-45 Minutes Trips (copy)_130604457124818949:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[cnt:Calculation_1211186892701106181:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[pcto:cnt:Calculation_1211186892701106181:qk:1]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_130604457124356099:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Percentage revenue of 30 Minutes Trips (copy)_130604457125564424:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Revenue of 30 Minutes Trips (copy)_130604457124651012:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_130604457125335047:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[sum:Calculation_1211186892696621057:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de la Commune / King&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University / des Pins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Place du Commerce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Square St-Louis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Ronde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ottawa / William&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Square Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria Hall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Island / Centre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Square Phillips&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gare Canora&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marché Atwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Milton / University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Place Longueuil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congres&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parc Plage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greene / Workman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nazareth / William&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann / William&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murray / William&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-André / Robin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clark / Evans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milton / Clark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1342354166364774406:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;45-60 Min Trip&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;30-45 Min Trip&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;30 Min Trip&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trips' id='trips_29763B00D439413D9E2AAEB7C0044F7A'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[trips].[start_station_code]' />
                    <expression op='[stations].[code]' />
                  </expression>
                </clause>
                <relation connection='mysql.1xgo0qz0fj2fw419yt5td1lsyr9s' name='trips' table='[trips]' type='table' />
                <relation connection='mysql.1xgo0qz0fj2fw419yt5td1lsyr9s' name='stations' table='[stations]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='4 Total trips per station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Total trips per station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:longitude:qk]' field-type='quantitative' max='-8182271.2137967106' min='-8204353.8409869857' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:latitude:qk]' field-type='quantitative' max='5706601.9580774847' min='5695847.6280688643' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d8d8d8</color>
                <color>#c0c0c0</color>
                <color>#a8a8a8</color>
                <color>#909090</color>
                <color>#787878</color>
                <color>#606060</color>
                <color>#484848</color>
                <color>#303030</color>
                <color>#181818</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' />
              <size column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' />
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]' />
              <lod column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:latitude:qk]</rows>
        <cols>[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{1E030B6C-CA5A-4748-8F18-9F3CBE65AC75}' />
    </worksheet>
    <worksheet name='Avg duration by station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Average trip duration per station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='Duration Min' datatype='real' name='[Calculation_1211186892701106181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column-instance column='[Calculation_1211186892701106181]' derivation='Avg' name='[avg:Calculation_1211186892701106181:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1211186892701106181]' derivation='Sum' name='[sum:Calculation_1211186892701106181:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:longitude:qk]' field-type='quantitative' max='-8167009.601657141' min='-8211182.7940970846' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:latitude:qk]' field-type='quantitative' max='5713870.890496023' min='5688106.1841563471' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:Calculation_1211186892701106181:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:Calculation_1211186892701106181:qk]' />
              <size column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[sum:Calculation_1211186892701106181:qk]' />
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]' />
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:Calculation_1211186892701106181:qk]' />
              <lod column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.64767956733703613' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:Calculation_1211186892701106181:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:latitude:qk]</rows>
        <cols>[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{82B80841-8801-49F9-A8D7-9A1468463388}' />
    </worksheet>
    <worksheet name='Duration by membership'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Distribution of duration of trips by membership</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='Duration Min' datatype='real' name='[Calculation_1211186892701106181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Is a member' datatype='boolean' name='[Calculation_1211186892703571975]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[is_member] = 1' />
              <aliases>
                <alias key='false' value='Non-Member' />
                <alias key='true' value='Member' />
              </aliases>
            </column>
            <column aggregation='None' datatype='integer' name='[Duration Min (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_1211186892701106181]' peg='0' size='2.3' />
            </column>
            <column-instance column='[Calculation_1211186892701106181]' derivation='Count' name='[cnt:Calculation_1211186892701106181:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1211186892703571975]' derivation='None' name='[none:Calculation_1211186892703571975:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration Min (bin)]' derivation='None' name='[none:Duration Min (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1211186892701106181]' derivation='Count' name='[pcto:cnt:Calculation_1211186892701106181:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Duration Min (bin):qk]' scope='cols' value='Duration in Minutes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1211186892703571975:nk]' />
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[cnt:Calculation_1211186892701106181:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1211186892703571975:nk] * [federated.0h6y8fw1kmriif11ks9so1orza3b].[pcto:cnt:Calculation_1211186892701106181:qk])</rows>
        <cols>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Duration Min (bin):qk]</cols>
      </table>
      <simple-id uuid='{07053559-0D9F-4FB0-95DF-035D4609DA1E}' />
    </worksheet>
    <worksheet name='Monthly Members Trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Percentage of trips per month by members</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='Trips by members' datatype='integer' name='[Calculation_1211186892696621057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([is_member] =1) THEN [id] END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column caption='Percentage of trips that were done by members' datatype='real' name='[Calculation_1211186892697133058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_1211186892696621057])/COUNT([__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A])*100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1211186892697133058]' derivation='User' name='[usr:Calculation_1211186892697133058:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]</rows>
        <cols>[federated.0h6y8fw1kmriif11ks9so1orza3b].[mn:start_date:qk]</cols>
      </table>
      <simple-id uuid='{468DCDD6-23FF-4A98-953D-FB716116B13D}' />
    </worksheet>
    <worksheet name='Monthly trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Total Monthly Trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]</rows>
        <cols>([federated.0h6y8fw1kmriif11ks9so1orza3b].[mn:start_date:ok] / [federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok])</cols>
      </table>
      <simple-id uuid='{BDB37EFC-59F1-4F49-9B1A-C6472C920543}' />
    </worksheet>
    <worksheet name='Proportional Monthly Usage'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Proportional Monthly Usage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[pcto:cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]</rows>
        <cols>([federated.0h6y8fw1kmriif11ks9so1orza3b].[mn:start_date:ok] / [federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok])</cols>
      </table>
      <simple-id uuid='{27DD2198-1043-4980-82C3-CD3B2C91E95B}' />
    </worksheet>
    <worksheet name='Revenue Short Trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Total Revenue and Percentage Revenue of Short trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='30-45 Minutes Trips' datatype='integer' name='[30 Minutes Trips (copy)_130604457123897345]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF([is_member] = 0 AND [Calculation_1211186892701106181] &gt; 30 AND [Calculation_1211186892701106181] &lt;= 45) THEN [id] END' />
            </column>
            <column caption='45-60 Minutes Trips' datatype='integer' name='[30-45 Minutes Trips (copy)_130604457124081666]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF([is_member] = 0 AND [Calculation_1211186892701106181] &gt; 45 AND [Calculation_1211186892701106181] &lt;= 60) THEN [id] END' />
            </column>
            <column caption='Duration Min' datatype='real' name='[Calculation_1211186892701106181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='30 Minutes Trips' datatype='integer' name='[Calculation_130604457123606528]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF([is_member] = 0 AND [Calculation_1211186892701106181] &lt;= 30) THEN [id] END' />
            </column>
            <column caption='Revenue of 30 Minutes Trips' datatype='real' name='[Calculation_130604457124356099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_130604457123606528])*2.99' />
            </column>
            <column caption='Total Revenue of Short Single Trips' datatype='real' name='[Calculation_130604457125113862]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_130604457124356099] +&#13;&#10;[Revenue of 30 Minutes Trips (copy)_130604457124651012] +&#13;&#10;[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]' />
            </column>
            <column caption='Percentage revenue of 30 Minutes Trips' datatype='real' name='[Calculation_130604457125335047]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_130604457124356099]/[Calculation_130604457125113862]*100' />
            </column>
            <column caption='Single trips by duration' datatype='string' name='[Calculation_1342354166364774406]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member]=0 AND [Calculation_1211186892701106181] &lt;= 30 &#13;&#10;THEN &quot;30 Min Trip&quot;&#13;&#10;ELSEIF &#13;&#10;([is_member]=0 AND [Calculation_1211186892701106181] &gt;30 AND [Calculation_1211186892701106181] &lt;=45)&#13;&#10;THEN &quot;30-45 Min Trip&quot;&#13;&#10;ELSEIF&#13;&#10;([is_member]=0 AND [Calculation_1211186892701106181] &gt; 45 AND [Calculation_1211186892701106181] &lt;= 60)&#13;&#10;THEN &quot;45-60 Min Trip&quot;&#13;&#10;END' />
            </column>
            <column caption='Percentage revenue of 30-45 Minutes Trips' datatype='real' name='[Percentage revenue of 30 Minutes Trips (copy)_130604457125564424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue of 30 Minutes Trips (copy)_130604457124651012]/[Calculation_130604457125113862]*100' />
            </column>
            <column caption='Percentage revenue of 45-60 Minutes Trips' datatype='real' name='[Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]/[Calculation_130604457125113862]*100' />
            </column>
            <column caption='Revenue of 30-45 Minutes Trips' datatype='real' name='[Revenue of 30 Minutes Trips (copy)_130604457124651012]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([30 Minutes Trips (copy)_130604457123897345])*4.79' />
            </column>
            <column caption='Revenue of 45-60 Minutes Trips' datatype='real' name='[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([30-45 Minutes Trips (copy)_130604457124081666])*7.79' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1342354166364774406]' derivation='None' name='[none:Calculation_1342354166364774406:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_130604457124356099]' derivation='User' name='[usr:Calculation_130604457124356099:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_130604457125335047]' derivation='User' name='[usr:Calculation_130604457125335047:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage revenue of 30 Minutes Trips (copy)_130604457125564424]' derivation='User' name='[usr:Percentage revenue of 30 Minutes Trips (copy)_130604457125564424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665]' derivation='User' name='[usr:Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue of 30 Minutes Trips (copy)_130604457124651012]' derivation='User' name='[usr:Revenue of 30 Minutes Trips (copy)_130604457124651012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue of 30-45 Minutes Trips (copy)_130604457124818949]' derivation='User' name='[usr:Revenue of 30-45 Minutes Trips (copy)_130604457124818949:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_130604457125335047:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Percentage revenue of 30 Minutes Trips (copy)_130604457125564424:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Percentage revenue of 30-45 Minutes Trips (copy)_130604457125830665:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_130604457124356099:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Revenue of 30 Minutes Trips (copy)_130604457124651012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Revenue of 30-45 Minutes Trips (copy)_130604457124818949:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]'>
            <groupfilter from='&quot;30 Min Trip&quot;' function='range' level='[none:Calculation_1342354166364774406:nk]' to='&quot;45-60 Min Trip&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]</column>
            <column>[federated.0h6y8fw1kmriif11ks9so1orza3b].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='639' />
            <format attr='height' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[:Measure Names]' value='448' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{4A15EF60-B4C2-4366-8B64-CFBE73D65179}' />
    </worksheet>
    <worksheet name='Revenue by hour weekly'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Total revenue generated from single trips up to 30 mins for each hour of each day of a week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='Duration Min' datatype='real' name='[Calculation_1211186892701106181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='30 Minutes Trips' datatype='integer' name='[Calculation_130604457123606528]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF([is_member] = 0 AND [Calculation_1211186892701106181] &lt;= 30) THEN [id] END' />
            </column>
            <column caption='Revenue of 30 Minutes Trips' datatype='real' name='[Calculation_130604457124356099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_130604457123606528])*2.99' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_130604457124356099]' derivation='User' name='[usr:Calculation_130604457124356099:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[hr:start_date:qk]' field-type='quantitative' major-origin='0' major-spacing='4' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[hr:start_date:qk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_130604457124356099:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_130604457124356099:qk]</rows>
        <cols>([federated.0h6y8fw1kmriif11ks9so1orza3b].[wd:start_date:ok] * [federated.0h6y8fw1kmriif11ks9so1orza3b].[hr:start_date:qk])</cols>
      </table>
      <simple-id uuid='{2ED1D8F3-7CEA-4C7C-B732-64B7AFAE9E16}' />
    </worksheet>
    <worksheet name='Round trips % for Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Top 10 stations by percentage of round trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='Round Trips' datatype='integer' name='[Calculation_1211186892698619907]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([start_station_code] = [end_station_code]) &#13;&#10;THEN [id]&#13;&#10;END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column caption='Percentage of round trips' datatype='real' name='[Calculation_1211186892699238404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_1211186892698619907])/COUNT([__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A])*100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1211186892699238404]' derivation='User' name='[usr:Calculation_1211186892699238404:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_1211186892699238404]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' value='#000000' />
            <format attr='text-format' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]</rows>
        <cols>[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]</cols>
      </table>
      <simple-id uuid='{5C798674-56B0-4947-B834-6A33200A340A}' />
    </worksheet>
    <worksheet name='Round trips &amp; member trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Percentage of round trips and percentage of member trips by station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='Trips by members' datatype='integer' name='[Calculation_1211186892696621057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([is_member] =1) THEN [id] END' />
            </column>
            <column caption='Percentage of trips that were done by members' datatype='real' name='[Calculation_1211186892697133058]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_1211186892696621057])/COUNT([__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A])*100' />
            </column>
            <column caption='Round Trips' datatype='integer' name='[Calculation_1211186892698619907]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([start_station_code] = [end_station_code]) &#13;&#10;THEN [id]&#13;&#10;END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column caption='Percentage of round trips' datatype='real' name='[Calculation_1211186892699238404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_1211186892698619907])/COUNT([__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A])*100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1211186892697133058]' derivation='User' name='[usr:Calculation_1211186892697133058:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1211186892699238404]' derivation='User' name='[usr:Calculation_1211186892699238404:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' scope='cols' value='Percentage of round trips' />
            <format attr='display' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]' scope='rows' value='Percentage of trips by members' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
            <format attr='text-format' field='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]' />
              <lod column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1127' />
                <format attr='maxwidth' value='1127' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892697133058:qk]</rows>
        <cols>[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_1211186892699238404:qk]</cols>
      </table>
      <simple-id uuid='{3E4B40FE-C908-4517-80AC-3248FA26E0ED}' />
    </worksheet>
    <worksheet name='Single Trips by Duraion'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Single Trips by Duration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='trips+ (bixi)' name='federated.0h6y8fw1kmriif11ks9so1orza3b' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6y8fw1kmriif11ks9so1orza3b'>
            <column caption='Duration Min' datatype='real' name='[Calculation_1211186892701106181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Single trips by duration' datatype='string' name='[Calculation_1342354166364774406]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_member]=0 AND [Calculation_1211186892701106181] &lt;= 30 &#13;&#10;THEN &quot;30 Min Trip&quot;&#13;&#10;ELSEIF &#13;&#10;([is_member]=0 AND [Calculation_1211186892701106181] &gt;30 AND [Calculation_1211186892701106181] &lt;=45)&#13;&#10;THEN &quot;30-45 Min Trip&quot;&#13;&#10;ELSEIF&#13;&#10;([is_member]=0 AND [Calculation_1211186892701106181] &gt; 45 AND [Calculation_1211186892701106181] &lt;= 60)&#13;&#10;THEN &quot;45-60 Min Trip&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_29763B00D439413D9E2AAEB7C0044F7A]' role='measure' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1342354166364774406]' derivation='None' name='[none:Calculation_1342354166364774406:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]'>
            <groupfilter from='&quot;30 Min Trip&quot;' function='range' level='[none:Calculation_1342354166364774406:nk]' to='&quot;45-60 Min Trip&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='893' />
            <format attr='height' value='598' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]' />
              <wedge-size column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[pcto:cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' />
              <size column='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4EC6D08B-5196-4A92-AC28-73A38E5C7A10}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='850' maxwidth='1300' minheight='850' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='18' param='horz' w='98770' x='615' y='941'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='15' param='horz' w='86462' x='615' y='941'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='7' param='horz' w='86462' x='615' y='941'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98118' id='5' w='86462' x='615' y='941'>
                  <zone h='49059' id='3' name='Monthly trips' w='56923' x='615' y='941'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49059' id='16' name='Single Trips by Duraion' w='29539' x='57538' y='941'>
                    <layout-cache fixed-size-w='914' type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49059' id='12' name='Monthly Members Trips' w='34077' x='615' y='50000'>
                    <layout-cache minheight='318' minwidth='168' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49059' id='20' name='4 Total trips per station' w='52385' x='34692' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98118' id='17' is-fixed='true' param='vert' w='12308' x='87077' y='941'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10941' id='19' name='Single Trips by Duraion' pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]' w='12308' x='87077' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8588' id='21' name='4 Total trips per station' pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' w='12308' x='87077' y='11882'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='18353' id='22' name='4 Total trips per station' pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' w='12308' x='87077' y='20470'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='26' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98118' id='25' param='vert' w='98770' x='615' y='941'>
                <zone fixed-size='280' h='49059' id='3' is-fixed='true' name='Monthly trips' w='56923' x='615' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='16' is-fixed='true' name='Single Trips by Duraion' w='29539' x='57538' y='941'>
                  <layout-cache fixed-size-w='914' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10941' id='19' name='Single Trips by Duraion' pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]' w='12308' x='87077' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='12' is-fixed='true' name='Monthly Members Trips' w='34077' x='615' y='50000'>
                  <layout-cache minheight='318' minwidth='168' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='20' is-fixed='true' name='4 Total trips per station' w='52385' x='34692' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8588' id='21' name='4 Total trips per station' pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' w='12308' x='87077' y='11882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='18353' id='22' name='4 Total trips per station' pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' w='12308' x='87077' y='20470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AFA35124-3265-44FA-9F59-FDDDC205E48E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Monthly trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[mn:start_date:ok]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF338F58-E56F-4FCD-98C1-BBD2AFA630CA}' />
    </window>
    <window class='worksheet' name='Proportional Monthly Usage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[mn:start_date:ok]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACBE5F93-6932-4C2A-B11E-283F1111AF65}' />
    </window>
    <window class='worksheet' name='Monthly Members Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[:Measure Names]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[cnt:is_member:qk]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[mn:start_date:ok]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87313B18-9FE1-4704-B8CD-5B24FEED0CA6}' />
    </window>
    <window class='worksheet' name='Round trips % for Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8E74A21-105C-4129-9E69-405D479C2CB6}' />
    </window>
    <window class='worksheet' name='Round trips &amp; member trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{029745A0-EC0E-4332-97DA-E30A416DB848}' />
    </window>
    <window class='worksheet' name='Duration by membership'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1211186892703571975:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[cnt:Calculation_1211186892696621057:qk]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[cnt:is_member:qk]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1211186892703571975:nk]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Duration Min (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{333807CD-2C9A-4BB7-9625-4DD15AC192E5}' />
    </window>
    <window class='worksheet' name='Avg duration by station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:Calculation_1211186892701106181:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[sum:Calculation_1211186892701106181:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[avg:Calculation_1211186892701106181:qk]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC768E67-5C30-4D6C-9D72-F716D040F444}' />
    </window>
    <window class='worksheet' name='Single Trips by Duraion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{970038CE-FC0B-4925-9040-6337DB375232}' />
    </window>
    <window class='worksheet' name='Revenue Short Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[:Measure Names]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Calculation_1342354166364774406:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E97385D-F44D-40BF-A7E3-7BE5C2AADD16}' />
    </window>
    <window class='worksheet' name='Revenue by hour weekly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[wd:start_date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>1</bucket>
                </multibucket>
                <axis>[federated.0h6y8fw1kmriif11ks9so1orza3b].[hr:start_date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[hr:start_date:ok]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:Duration Min (bin):qk]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[thr:start_date:ok]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[usr:Calculation_130604457124356099:qk]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[wd:start_date:ok]</field>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5426A1E-F210-4C29-B974-CF3BBFCCB0CF}' />
    </window>
    <window class='worksheet' name='4 Total trips per station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0h6y8fw1kmriif11ks9so1orza3b].[__tableau_internal_object_id__].[cnt:trips_29763B00D439413D9E2AAEB7C0044F7A:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6y8fw1kmriif11ks9so1orza3b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2057AC3-2A8A-49D6-9BD6-17E62737002C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='4 Total trips per station'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly Members Trips'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly trips'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Single Trips by Duraion'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C59209DE-CB8E-454E-961C-73BE30A3C49A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='4 Total trips per station' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg duration by station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      R220WqJlmq+TCbB/zQM58wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Duration by membership' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Members Trips' width='192'>
      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
      huZ75UX/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly trips' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Proportional Monthly Usage' width='192'>
      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
      B3l5FcR9GLsBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue Short Trips' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd3wc933n/9dsb1iU3cUuei8kCsHexV4lU6KsYkmWXOJcciWP312S+/0u
      v5zv50dyd7k4Z/v8iJ3EtrosiV2USLGCHSBBggABEL0RvdcFtu/M/P4ATYkqtBzToqSd51/A
      7mLmu9+Z9zTMfL6CLMsyCkWEUj3oBigUD5ISAEVE03z4l3A4jMfjeVBtUSg+d3cFQBAENBrN
      p31WofjKEZSTYEUkU84BFBFNCYAioikBUEQ0JQCKiKYEQBHRlAAoIpoSAEVEUwKgiGhKABQR
      TQmAIqIpAVBENPUPfvCDH3zSG7Ik8ev/8zdUtHRRU11PdFIGcWb9fZmpf3aU3mEvsdHm+zK9
      B2G67yZvvPUePr2DFGcUt26UcfT0ea5dvU7Y7CIxSuTQ229SUXkdt9ZJutMKQMP5g/x0/2VW
      LF2AVg5y4KX/zYl6D4V2H28eraKgKAf1vWYsS3S3t6KLtqP9DJuv2cEW9r9zlH179nCrbxht
      bCLOGNPtd7380z/8kvmrl6H7fTvkS+pTA4AsUXr4FE/+5V+QFO7i/coxFmZYKC8rZ9AjkGS3
      0NLQSFj00jHoJVbnp/xSGaN+HQmxOmoqymjuncTpdDLUXs/I1CRV12swxzqoLv01r71TiSUm
      BnuUQEVZOa09IzgSktASpKHqCjc7+wmFVMTFWmiruUx1cy+x8S6MOjXgo6a6DU1wnO4pGdVM
      P2UV1UimOFTuXoZ8OmJMappv1mOxxdFZe40bzT3EORPwD7fROTRF/Y0qJKMNrX+YnnERWzRU
      V7XjSoiju6maa7VtWGxOLAYtAAH3EBcvlDMlGnCYZN55/ed0BOJZVDwPZ5wFvTmW4kVLyYz2
      cehsEzZ/Ay3qEp7fuYi9r++lZM1K9AJ0XC+nZ3CUmLwl2NWTnLl4keEJE1vWzMcdEEiOkWno
      HKSz/gZjIR02Q5jmW0PY7bE01lQjiFP86O/+gXHBgiPehezuo6z8Gj6NFYfVSGf9VSrr2jDE
      OLCadOii7BQVF1N++hTf+89/QaJBpLGlh8BMP2MBM0JwhrTMNBprq+ntbKNvKowrPo6JvmYu
      Xa7Cr4kiPtby+a2Rn7PPsA2RmBwbx2DWcnjPPqyp+YxdO0B5+zjv732Nd05dYtbv5tcvvoop
      OZ9YI9SV7qdbdGH1tnP4Qi1Vp/ZR2S+SYRjn9ZM1JKck4UzKpCAnlZDXS1J2AfZAO3tO1lB/
      /hBXe0UyjG72n7rOUN1xLnQJZMSG2fPOaSQA3Ox/9TWOlFbgmepl/5Fy8ualc/rg24wPd3Hg
      ZCVB7wAHj5TTV3uOyt4QWTE+3nznAt3VpzhS2U+qU8eeAycYbr/KucpOYIq9b59gqus6x6tG
      yEsysG/fMfwSgJdf/PRFnDn5tJ8/wNUeH0kuO+l5xaS7YgABvV7NxaO/5sUD5azfuJqhrluk
      pKWjM8YQJU8x5vugRxcsyqW2poOp7gbishYiAJJnjIrrzXgG6nnlUDmpGamceOtthsZ6OFpa
      Thg4un8vYpQTlz2OggULiBWm2Hf4PBnz5nHu7dfodXey771aivLTmJl2f+LSDM+MsO/VVzh5
      pY6gqOJq2Tm8gVkO7T1ATFo2Leffoaqrn9feOEhuYSFBz9Tvt4Z9wd3z5v+Qf4gDr79JWlI+
      z61N4b//v/uYVJnRqRykaUTQGtjy6LNk08npsJ1ns1MxqsK8/nYV/VaRKbNMUpEFDzpSM1Jx
      zfbh6whiibJgMgvExUTRefUChyr6iJZHcce5aBzopXjbdpxyIzIBmqur6RhxoJ3Wk5BUgMRc
      akNE8dTzzxPovcivbrZgMAno7UnYc5cSPv4KA/UTOBetpafhPRr7LYQnokhOLgIPJKRlEu9w
      I4ZuAaa7vnNfYxVNbV6Mog1XQiayDHh6GZBdFGSkoc9xcqZjiCVmI1ExcVhvHxaqdSbWbnuc
      +OgTnCqrZJFBhySKAMiyBu2HjmssWYvpP3eephkVhSVZNDV13tUGW0IqCfHxaMQQ4Y8uMIMZ
      s9FAnN1OaKyahsY61HoBoyMBjSaRojSJvQffZ+mWx5AB4ZMWutXB159+ltgPHUNpzTEkJSdT
      mBFFR3+Ah5Zlc3jvPpIXPkRJ4Vf3ZPGeAdAaXDzxrRdwAeAnMzGO9AWrKHBqkAQVao0evV4D
      hiRS1KM0dPRjNwnk5ucxI2awfU02s0Et9R+Zrs4QTXC2ldGpGVrqWijasBtb3wUujmlIc8XS
      2NhCdMwwYVEgp7CAcxUi23asZXYm8EHbjEZ0ahUqewaJNjPLN2xDHfSg01hYlggvnWjj+f/0
      OOqGVqweia3bVzM7G8Tb8JG26E14p0fpvRViVpJIzJmPtbadzdt34J/xzi14cwoJDNLU3cvN
      1kEKN26Bpg9NRBKpr6nE6srAFGVFDLmZt3olr5w9y3xNArMxWbgMH56rhQStj6qwjW8Zf8sC
      0uoQfTMM9nUx5g6BIBBt0dLXO4jTaccZa2Ph6k3ESW40QTdJC7ZQIAxz4NJllhc8jfaTlqvW
      hPYjJxBhv5fhgW4qW6ZZ8YwRYbCAZ59bzWv//DpTmxYTd+9mfml9+jkAAtG2OBISE253oobC
      kkIG2hsZdktk5WQQb7fjcjnRqXUUFOTS0VBD2Ghn6crVaN09dPRPkZSWjsvpxJmQQJTZgs0R
      T0ZGFjadh96JMCvWLKGvuRFHzkJyU5PIL5iHb7SL8fFRxnCwbedOkrWTNHYMYEtMw241IaAm
      Ls5GQoIDnTGGwhwXTfWNYIoj2WUnMSUBITaVZTkJxCVlY9e4aW7vx56SjsvlJD7ehT3ajM1u
      Jye/EGF2kFmtjYX5uWQVLSLTJtPQ3IXFmYIz1oIgaFlYkkv9jTqSSjawLC8BvcmKIz6BGIsO
      EFBJXhrqGpiUrOx6eAOOhExSjLO0DAbZ9dhOLLdXOIM5Crsjnuy0OGzOPBLj7TicThITXcTZ
      7SQkJWK3x+O0RxNjs5GanUe8Lkj/FCxaOJ/k5BTycjO51dRCdFI+qxdl0NrQiFcVQ1Z6IhPd
      TXSOBNi4acNdFy1i4+JISExErdYSa7fjirehvv16vD2WS2dOobPEUrhqK0VpLgLuPmobO1m4
      aQcZcVF/2LXwAfrCPRE22FbF2YoGPH6RtTt2My855kE36Ssv5HPz1p53efo7z2P47R//SvnC
      BUCh+Dx9Vc9tFIrPRAmAIqIpAVBENCUAioimBEAR0ZQAKCKaEgBFRFMCoIhoSgAUEU0JgCKi
      3XU3qCRJhMMfvQFXofjquisAsiwrAVBEFOUQSBHRlAAoIpoSAEVEUwKgiGhKABQRTQmAIqIp
      AVBENCUAioimBEAR0ZQAKCKaEgBFRPvU0oiyLOP3zhISZdQaHUajHpXwSZUmI5Msifi8PgSt
      HoNegxQO4fMFkAU1JpMRtQqCfh+BkITRbEajurvvxFAAr1/EHGVCDgXw+ObKPuoMJgw6DbIs
      4fN6UesM6LUaZDHMrNeHwWSBcABZrUWnuWch9d/1GxH0+/AHb98LJqixWEx3lrkYDhISBQz6
      Tyq2+OV1V2lEWZYRbxd0RZb4x+//JX2Sihvnz+C1pJAWb70vM50eaqbi5hjpKfb7Mr0Hof9m
      Ka+9W0FUfBKuODOt1y5ScbOF+msXaZvWk2X18i8v72O4t5nqvjALcpM/KFQri5x66yX+6eV3
      WfrIZlrff5U95a14J4aRTA6cMSYk/zQ//P5f0haIZXF+GkO1p/iLv/o+9iW7GSl/i6aAk+yE
      ey+PwHgXpde7yUhzfYZdvUxXw3VOv7+fvaV1gJq0jBS0t4M71HKR/Rf6WVyY9vt13BfMvYvj
      6uxs2fUoUvM5DlQ2kaMf4WJlE5gcPLJ1DWWnjhMbH82w6GKxw8v5663EpBWzfn4sp89cwiMb
      WLNxK6PVJ5k0xTPc0ULu8u2MVr3P8WoPHv9OVuTHcP5CJZ6gxMptj5Ksn+H06XP4VXqscVls
      XpXJmePHGfdB8cpNFKbbgWn27ykjyxli2lqILXCL+lsjxGeVkG+ZoEPOYO08O8ffO8mqrWuo
      PHuO0VmRhWs3Yxm9TtW4ifBoJ7G5qyiKnqBxysGGpbHsefsqT359DWVnTtE3GSRv8VoW5yUh
      AL0Nl7l44xZmRxobl+dz4tgJRqUs/IEwoCJ/xUbyJJGumnMcbxqk3nuF1FW7ebQkmp//+J8Z
      37Yc++3enuiooM9UQL5tEBDpH50kJ2cdxflppCTa7vR/bFIO6sl+3GGZpu5pCnOcgIAzORXM
      OqrOHGZcZWW0q4v5Gx4lauQak/YVzIua4FzdMA73TQ6d62Fsxs3T6+dTeqqUyYCKRWs2YQ/2
      cupKPTpzPNse2UKURkXWglUYcDPbZmbXtjUMNVzgwpQVT18TxYsXkpQQYKi5nEutbuTZUWy5
      K1k7L4ZTx0qZkbQsfmgrub8llF8099wwiGE3tdeuUnalidw8B+/sf5/ohHSCnRe42DxKc00l
      vT4TS7NM7DtSwcZdT7JuYToVx/YyrnERI4/w/qUaBjubEWNzeGRpCmeqOli4pIR5C9bw8IYl
      mIxRZObm4NRNceJiHZVnjqJOW8GOhYnUtvfRVv4OdRNGkmI1HDl25na58AA3K8qY0KSQHTvN
      e6V1pGWkUHHmCKLBxLXLVQQmO2gaEumtOEnjuEBanMzhIxeZGOxkRLKxdeNirl+pZHayn66B
      ScBPQ307Qw0XuNTmJd1l4tTRU3hEIDzKGwevsuvJp4j3NHOhw8Pi4jyWrn+ElQVzW/ZwwMPp
      w6+z71Q1i5aUMDs1idliQaXSoBP8DA/0U1lZzfD4KIdP1bJzy7LbvSywbOMuMmKg4vhbHLvW
      yW9qVQp6K2kOmd7BQSYDBhyWuWK3k0O36J/wMNjVimDLZsMCO+XVrUz0d9A/6SfonaT11gjF
      ixaRVbCMbzy8hsaLh2idseAyhzhysoyG6xUIrnzWrSz61BFpPKNdlF2rJ2/xGoyhMdq7h/GM
      9TIq2ti9+xFqThyma6iD1kGRh9atwW758o0zc+89o6DBGhPLim1PsnmBiwmvjMMWx/KHv8WK
      dAsag5Wly1fgsgj4VWasBi1mk5HxiWlibXayF27g0bVFgBqr1YxKpUKWpLtmUXvuGB3TEs7E
      BFShAOPTs8Q7Ym8fewpMjI4RFecgIbOIZx/bdKfBKpOTh1YtJEoTwC9YcNhdPPXMsySkFxLl
      6aS2+jq5y1finhjHHGsjPnMR39y9FrUAUVYrKpUK+HhZ1NmJMfTRcTiS83n2qR0YBCDsIaC2
      EqXXEhdtZsrt+djfafRmtuz+Fn/85AYulp5FZ43FMzOLJIUJyAZiogxER1sR3cP4JYmz7+2n
      ubeb8oomHGk5LF6yjC1rFtDa2vmhVqlIT0+mpaIMdUIWBs1HzsFUWixmE2qVmt9W4nVidAKr
      zU5y3hK+8fAalm3/Opnacfa8/iYDM5/2DIhA2vxFFGan3jUck95kRKMxYVSHsSSU8PC6bC4c
      3U95Q+8n9OgX2z0PgdRqExm5uTgBEFlbHE/51eukO6MR9IsRVCpUKgFMyaxIh737D5CQmsOy
      Nat589wFhOxUXFkfH1fMGpdGcPgwpVccWLUC/V230OonEbFTUjyPg0cOMBwvEwwnULR6M2de
      O8lNIZ+4+EySEu2oAJVahYCAJX4+2dbzXK6+SUyMnYSEBNbkW/lZ6Qh/+z9cqGyruLznAjfl
      aWyJWcR9ZAlF2xIYPHuZk5YkZkSJlJLVcOUAtVEhYh1JuBJdaAwprEoP8sbe/cyMz7Dz6Qwm
      r176YCJSmPLSwwzOqAnOjJKSVcLCpXZ++fpB9rUYiClaR2KsDSF27vDm3/2HQmRJYrK5jdVL
      s6k49R6DHomJwV7WbHsWgQ+i6UrN4K23z7D7TzbTXHXvhRmflMzpSycQEiV8og2DLQnd9AXe
      O3Od9as3UL7vEvXhHOyJubjlfvrGPQhygEBI+uQJCqBWf3z/0FV3mX3DV9DlrsI41cWVln5k
      BHx+/70b+AV0V3VoURQJBOauRsiyTDAQQGsw3NnqylL49pUOFUaDnlAohFanRyV88J5Ko0Ov
      UxPw+xEl0BsMyOEQglaHWhYJiKDXqgkG/IioMGjV+PwBNFotoMI7OYhfbcHddIbzE6n88a6l
      hAM+gqKMTmdAq1UjIOH3h9DrdQgCiKEQ/mAIlUaLQadFFsP4QiImowFkmWDAT1iU0OoNqOUw
      oqBFq5IJhkR0Og1+nw/UGgQZ9Hod4WCAQEhEq9ej02gQBJDEMD5/ALVWh16nRQoFkQQNWo0K
      ZJlwOEQgGARBjcFgQK2CUMBPMCxjMBpRf+Qq0Af9q0cOh/EHgqjUGgx6HYIgzL0fDKHTaQgE
      gmh1eqSQH0FrQBBDSIIGpBCCRotKFglJAjq1gM/nR6XRIAgq9DoNwYCfkChgMuoJBnyERBmd
      3oAGCV8ggKDSYDQY+M0FPkkMEZIE9FoNYjiIiBqdRo0khgmJMn3XDlI6mc03N85HbzSiRiLg
      DyDKoDca0Ki+XFfWPzUAD8rMaDcXyq4RNiWwZcNKzLr7ealP8fua6muiN2SnKMPxoJtyX3zh
      AqBQfJ6+XPsrheI+UwKgiGhKABQRTQmAIqIpAVBENCUAioimBEAR0ZQAKCKaEgBFRFMCoIho
      d90KIcvyb72tVqH4KrkrAApFpFEOgRQRTQmAIqIpAVBENCUAioimBEAR0ZQAKCKaEgBFRFMC
      oIhoSgAUEU0JgCKiKQFQRLR7jg9Qe/kUPRNBYpzpLF9ciF6tjA/wG1LATUX5FUypC1iQ7UIA
      RP8Ml8svk1y0koxYOFd6iZmQiDE2lQ1rS+50thz2cLWsnGk5ilWrlmOUZ6i8cpWwNYWVC/PR
      qASkcJCqy+eJylhMfoqNkHuIs2XXKV67A3mokYA1nQxn1P38RnTUVtDQPTb3qz6OrZtXYVDP
      bSNnx3voGBVYkJ9yH+f54H36HkCWKH2nlNxVK5B6LrP3dO19m+lQ63l++daF+za9B6Hp0iGa
      ZmLJToq7/YpEfflxLpw5z9X2UULDTZxqnGb1mjUsXZD9oQrMEu+8+s/4orMoynERCAQ4e+B1
      xvTJeBpOcvzGXIFZOejl1LGjnLxUgQR0Xi/n0P7XaBoJMzs1yrQ3+Fvb6O2t4scvvc+nlb69
      m0BSdiGZ0T4aR1WsWVaM7kPlHIM+NyPjM79DD3053LM4rqDSEBNnx5ybzo3qYSpP7uV6zyye
      STdP/9F3eedffkJ0gh1v7CIWqFup7A8RnzafDVkCe0/VohZ9lGx9hvFz/8KgfTGq3moMxY8R
      M3iFykoPrngDi9M0nL50k6nhHvK3f5fFUQO8eugSDpuBcTGdf/t4Li++cRy9XiZ+/kYeW1+E
      wDD/7a9eZ16iDyF3B9qBa0yIaoIaFxsyg5S5c/nulnR+/MNf8tx3d3HkUCkCIVyLtpM5eYZD
      vQ7ShD7c1hJ2Zk5yfiCd7z2eyF/9P/v5wV8/wWuv7kfQqjGnL+Pp7ctRCxJn9/6ChikNQb/E
      E0/u4uKVStrFSWoyXawuSsE30UV5S4iHFqczAIyPjjI72sGxE2dYuXEr0b8pm+/ro67Tx3xz
      BeODKTy8zkpjn4+nHp+HxTHGz87Xs3NRKgBmRwrRnkGGvRLNox7mp8QAAjNDrXSEMug++XMG
      LPnIffXY1z5P6tAxBtKeYp29lxdP3mJt3Ag113p4w27miaUOXtl3Fp1GJGXxDjL8NznWME6c
      3sTO55/HZRAwmK1EWy0YTGbiYq20n3uFwx0mPP2tPLzzIW62eckQb/B6pZfsKA9jujz+aEc6
      L71ylNj4WPJXf42Vec4/7Bp7n93zHCDkH+LAa6/x7rl2Nq/L4NjJK6hUajShYWo7xvB7Zsha
      +xT/dnMCpxv8fO973+OZHcu5ePQwPsGIVhXiRmMbsqShcOUGntm5klv94yxZtpiChevYtXk5
      sbF2rCYNRr1M3c0Wys9fZNVj3+LJDSV4w2FqSt9hMKhDq1bTUF9P6Hbb/BODLHniz9k+L8SF
      631oNXr6uhuJzl7IcGMVM321qFOWcKvsOD0eCb1Bzc3qekKiRHrRKh5/bDtTQ70gS0i37wiX
      RInuylM0jIlotWrab9bPjQ8Q6OFUA/zZn/wxO+eZOdc0wbIF81i+6THWFKWCJHHh8AGcxQvx
      z8wy457GXryTf/xf3+exjcW8/JOf0dlRw6uvvklz5wAzGivbHn+aHLmFN083EBZlVIKASqUi
      HPrQll1tJis9mlvtDXikeKJNc8MTyZI09+yGSk/xig08vnUxvb1DyJI4911kGUlSs2DpMnKK
      VvL8o+uoOn2Y0bAOrVqgvr6JWZ8frTmWlZs2Yf94Ae/b8xGZDBj5L//1+yRHyYjy3HwT85fx
      /Hf/FE3XVfq8QcKyhtySVRSl2z55Ql9g9x4hxuDiiW9/GxdAeIL3LTa2PfoUKdEqAj4v7eYY
      0pLiQTWIQfbjDYpoxCAGcxTFK7axvciO1y9S+vLdhzuCSoMk+pBkmfMH9xK94TusLKhi3w3Q
      qAV8/gBBXRBJljEYTaQVreHb2+fh8wbuNFgbk0R6vBnfsJ6YxEyefu4F5JAfnd5Auu4gx867
      WbL+e+jq28gpWcbzW4vxe/10nH3p7rYIKiRRJOjzEZJltAYjKbmL+Oaz6wj6fOjVgGxAK3nx
      hsJMzXgwJxjgI0MEJMxfwuBUD+19w4yE+pgYTUQfFYvREodVL2NNK+HbWSUguknQnGHWFybK
      YiE4qcEVJTA05sbY20tCWh4qAX5TsDw9I5Wjx86SvuphJnvuvTBVKtVcfVe/D1GeKyEvhkNI
      EuiNZrIXreP59Tn4vAFkKUiae5wDL/2E6T/6W1YkGz5higKp2TlzffAhkiQR8s/gRY/Dmc13
      /8hJzdmDvNHj5k8eW/GlurJy1xhhd5Ghr7OLnCWLMQKoDCRagxwvvURH1wC2pFRmJ8bIKlyA
      2WDBZfJy6swlhnw61q1cwJXSYzS2daGyOND5J4jOKMQmzDLgN7GsKIf+5go6J6AgK47L5dcJ
      Sir00UmsX5ZL+dlShkdGGQ5F8/jurbSUHaOmuQMvZlKT7KgI0tU5TsmiAvRmG2p3C6WXaxiY
      8JORlkKCcZYTzQLf2LEUZ2ICLVfOUtPQhl8TRZzWTyg6k4xY6B8LsGzRPG5WljPiCSFKRrY8
      vIXB2ktU1rXgDmlJTXah1lhIMrl5/0w5bn0iO9ctITg9iGTNIMNpQRBUuJIzyM7Oxir4ictd
      QpJuihMnTlNd10jB+q9RkBQ3N0aYSk+GS8/xE2fp8Rh57OFNZCdFcbG0lK4ZPV/bvo4ovRpZ
      CjMwNMbCpSXU17SybPUqguPdxGUvxxIcQopOI0qcIiYljxjBw7hoZcm8BC6fL8MTltBa4lm6
      qJDxjmqqe2bZsmENdZeOU9fcQVBrRZjq4HxFLaLRwfKlC4nSza22wdkJJkUL8zNc+KaG8BiS
      yEuKIeidYtynI0E7QemVBga6OijYsIsMo5fS0xcYmpUpXLSYVIeVL9Olki/cE2EDrdXc7J5g
      urcZ/bzt7FqZ/aXq0K+6tgu/5sxsEX/68IIH3ZT74gsXgFDAw+joBLLGgDPe/rHhRRUPVtDr
      xivriTF/yonDl8wXLgAKxefpy3S+olDcd0oAFBFNCYAioikBUEQ0JQCKiKYEQBHRlAAoIpoS
      AEVEUwKgiGh33Q0qyzKSJH3aZxWKr5y7AiBJEoFA4EG1RaH43CmHQIqIpgRAEdGUACgimhIA
      RURTAqCIaEoAFBFNCYAioikBUEQ0JQCKiKYEQBHRlAAoIto9y6NPjPQz65fQGs3E2+MeTI0e
      WcY3O8W420e8KxGdSmJ6cozpWT8GSyyOuCjkcJDR4REwROGIs6ISBGRZYnx4ALXZRmyUESnk
      Y3B4lBhHErJvCgzRWAz3rAz5O5KYHhtlyuOf+1VrJNnlQH27z0K+GWaCKuKizfdxnorf1z3L
      o7/+4/9NXXcXF47sobSq83Ns1oeaIYvs/dXPaOwdICgCvimuVdfS1dXFgVd+Rsuon6rSg5y4
      XMOxfW9Q2zM593ehAC/99O/49bGLSMBQ42X++3/9S8o6vdRfPEpNz/RvnffsYDNHzlUifraW
      Mj02TNX5g7y8t5SegZE7RXcBxm5VcfJy87+mCxR/QPfcBGq0MSx76CFwyuy52s7GfDPHjp1h
      NiCSt3wjE/WXKNj6FOq+K9yYtFNoHeNCTTcqXRQ7d6zj7OEDWOKT6ezo4eFnX6Dh/V9TtPuP
      kJpKaRSyWWid4MzVJkKShu2PP4HTrCbknaD02AlGPUFSix8iQzVA+c1O1mUMzQXAFMeWzVsI
      +abpq7nEjHua63WD7P6/voHUfIojVY0sSFsDgMWehtk7xERQpr1vgrysBACiYixMCxIX3nsT
      t9bOWG8nBZuewNBxGn/eo+QZbnHq6jjx3gaOVw7iD4V4eGkqR4+dIyCpWLB2OzEzLZytbsNg
      cvHw17cSpVKTml+M5O1i0uxk7ZJCuq6+S60/kfHmBlZvLMKoEuiqPklZawB1aARr5lo2FZh5
      993TiDoTi9dtJy8x+g++0BUfuOc5QDg4wcWTJzh+rp5FSwqpPXuEdreKWCscff8CNmOI+vYB
      6m/UE+s0sm/PUaJibcx0V3G5qY+hwRFylmxkvnWClgE/w71d+ETwTY0yMjXB++8cQTZEo5ls
      5OT1bgDaK84wETOfZ7/xGJUn3yE2dwlZaWk8tvsR4oxz7RrprGXPG2/QJ6SSYdPgD8jo9QJ6
      gxHfrJs7212NiawUE53dvUx49Dhj5ibgHhtgfDbA2PAgcZkLWVccT21TL9MjvUx6RUJ+N/2D
      sxQtXkhu8XJ2b11Fzck99AajMKs9HD97mVtNdagdWWxavwzDpxwZeiYGudHYz+bHvoYpPMXA
      8BTeqWHE6Ayeevob1J8+yNB4D13jsGrdepLjTPdjmSp+B/fcA6g0FpJsao5Xyaa5AFIAABEF
      SURBVDyS5qT+hpvk3NUsm+9g1UYTTLVSc74c2aPj8SQLxwMmFi9ehGHZEixGmVfLtOh1WgQV
      fLwAY5gZn5olJSUkPLQcU1QMAAGfD4PNgkZvQhX2E/6Ewo3xmQv45vcKuP7eLymtGcBiAo9X
      QpqZJirWiQpuh0AgNSOd8ssXMacWYhq/8pEvqMao190+Z7h3hciZmVkyixeyJtPERoMZs0bE
      3ljDq7/4J77+Z/+FzGj1J/5dVtEiUp02Bic/eE2n06HSaFEhE5u+lOd2RXPx6B6MBdvYvTr/
      nu1Q3F/3Hh9AZyR78Wa+Ffbxq9cO8K2dW7n65ruc7E/Hnl7ItqWZSF17CJc8Rqw+jq9tSObN
      ve+SlmBj8fJFqNVqBECl0qBSQVaGg6P79mD39qAqKmHrhnkcPvwuaUkOCpZtYEGmg9yV66ne
      8x4v31ThWrwFq06NRqO+UyHaM3KLd4+fQ1LrGBsLsev5XMLGPg6+/AvksMSu5zciALIAarUa
      W0I6vZ3H2LpmO/0tGlQCqFTquQEp1GoEQUBQqVGrBVJzcnn1/b24k0VEdTpWVxrqsUscOmlj
      85Zd/PyNt/BkZZCQU4Ij0EZd1zQqre6u6tWCoEZ1eyw1lUqN5vYYWwgq1Ldfb7xaysstAVJW
      P4Lc10zp5RqCIYjWfHKIFH84dxXHFUVReSLsD6zx7OvUyst5ZlPeg26Kgt+yB1Dcf4nzVmPE
      /qCbobhN2QMoIpryn2BFRFMCoIhoSgAUEU0JgCKiKQFQRDQlAIqIpgRAEdGUACgimhIARURT
      AqCIaHfdCqEMGq+INHfdDCcID+CZX4XiAVIOgRQRTQmAIqIpAVBENCUAioimBEAR0ZQAKCKa
      EgBFRFMCoIhoSgAUEU0JgCKiKQFQRLR7jA8gcfnEftpH/EQnZrN13UpMugeQF1mmv6WSS/UD
      bHn4MWz6IHVXL1DbNogrbymbl88j5BnnzMnTqJzz2LiyGO2HxzGQAlSUnsAfX8z6kgwun9hD
      23AAjTGKbY88jt0EU/3NHC/v5GuPb8OiEWivusDNYT07N+RTXtXG6pXL0d/PqoWzg7x1uJSQ
      KAGQvXg9qwvT7rxdV34cW/EOkqLu4zwVn+ge4wPIVJyrYdsLz5MmtfPqexUgy/i9s7hnZhEl
      Cb/PhyiDFA7hD4aQpTAzM248vgCyPPe+3+dlZtaLJMsEfF5EGcRQgEBIRJZEPDMzzHr9fOiW
      VIJ+L+6ZWcKiRNA3w69e3MPKzZuI0QMBLxrnfJ597jmmyl/lXOsER17/FeaCjWi6znO8suuD
      aSHTW1dOWV0DVXWtII/z3vluXnjhBZ59cje229WmJ7vrqKm4wPWuGeSQj3Nnr1B24Sx+WcLn
      8yPLEl6vD793dq6tsoTf50eSIeT3EgoHOfLi/+RwRSf+YBhJDDE748brDyLLMqGAD7d7Bn8w
      PNc2s4tnnnsOf3cTqx5/gVUFqfh9PkKhAD5/kKDfR1ia6y+v18OMZ67/JDHEjNuNxxv4hGLD
      in+Nz1AaUSDW7iA86mWiq5q9p2uJ1QeRnYuQ285S9OR/RNN0iMrgfDL8NXR6LXhG+9n89Sd5
      919+SubyTbRfO8vmP/4+1a/8DQ/9p79HurKXy8JCFqtbqeoPERrrYfmT/56FyWbcQy28sf80
      sTEG3IZMds630DsySuWVCqI3bCHGGEOWU6C7pYYeXyyLokSqhwXW5cQjhQt5o6oFeXkGAhD2
      TVJ6uZWNaxdxrgXwTCOH3Lz22uukzFvCQ0sL0N7eWRQsW0DD9XqW25JQR7uwTAwAfm5cu8Ha
      h7L563//Ux5/Zg3ll+t47k+/w4GX3+Lb//E/U/nq36Bf92e0tPXi910iw7GZydoz9AQNjPf0
      8fi/+RNOvfwTrGl5RNlz2LquBI0gIPxmDRYEBMHNiz/6Keb4GIhfgrXrMqHs7Zx8479hnL+Z
      qY5qCnd8G23je9wM2XDoDWzc9TXidH+gtSKC3POYJuQf4s2f/5iX3m9m57YV3LhYypA7gE+C
      /t5+Fi3IoqGxlfrWERYVx3Ls+DVE/yzhoI/eoUn05miWP7SVZVkWRqZCH5n6LGdOleH3eRGE
      EB09IwC0VpThWLqdZ1/4Du6G85gyi0lLTmb7ji3EGOb+0uceo6OzB53ZTDAYQpZlBGHudm5J
      ErlyYg9vHjpDzaUjjGrjmR0dYmJ4iGl1Cn//o//BN7/xKK2n36J+0HunNVpXEeqJRoY76rHn
      Fn+sL0y2RDZs3UZWjMDU7N3fRW1ysKAwi6Xrd7DAKXGqrBaf14sQGqd72I9Wp0aljSY/J5VP
      O5IK+73kPfQ0335s5Z2FotYbWbZuO0/tXE7NjZuo9QYkUSZjXgFRSlXX++Le5dENLnY/vZt3
      X97DxJSXKKuFFPsKXthRzNT0DMbwKKfeOIJojGeHw4bZamXDo0+TbJLw+dw0fGR6KpVMOBRi
      dsYDVi0WazSLNu9iUYoZt29uixgVG8306BgBTxQ+VRT6j4xLFvS6CWjj2PTwo5j2/ogb3TMk
      xEJPn5tw5y2S01ayasN8ViMz3NXK+phpJrqqCQUFvNOjTEwZSLXrMRjuLmsOOnIsIkduTLPr
      4SKqTt6jYwQBZBkxHGDG48ME6LRqJv0BZLUBa3QMmx55krSoMB5RS97Xv4N3tI23fn2AP/vz
      f4P1E3pdY4wmOT7m7jbJMqIYZqhvgBjbfHKWLCBb9HHglZfQxH2fBQn6ey0+xWeg/sEPfvCD
      T3tzYnSMvBVrKUmLo+J6I8s3bmHk5iUq65qQzfFkpCYy1dWMrWgN81MSyEuzcOL4OTr6x0hI
      SSHk95GeOw/ZM4bJlUuuU8XF8hvojRbsKflsXJpB2dlzNHb0EZ+SQaxZT0xCCrO3blB2vYVV
      2x8l3WFlfGyc/KIiNIDod3PlQinlV6vxWDJ5ZP1SstIcXDl7mgl1Ajs3LMOoVQEClhg7SUlJ
      2Kx6VNYkSjLtVJWdpexqLYnFG1hRkIxKgJDPjWiIZ2G2mcYpM2vnJTE57SO/IJvpST95+RlM
      jPsoLs7GPTGBI3sBNnmUa3UdmC0mUvOXkJsSR035ecLRmazMjeXc+fO0946SlJ5O+/Wz1LQN
      kbVgGfnpTn6T6anxUZLzi4jSSEyOu0nLzcOkUzEzMUJc+jw6K47TNjCJW47m4S2rmO6u49yV
      G+jjc1m+MB+DRnmA6fd11yORii8Q0ctLP/471nz3b8mzPejGfHUpAfiikmWCwQBqrQG18t+a
      PxglAIqIpmxbFBFNCYAioikBUEQ0JQCKiKYEQBHRlAAoIpoSAEVEUwKgiGhKABQR7a77EmVZ
      RpKkB9UWheJzd1cAJEkiEAg8qLYoFJ875RBIEdGUACgimhIARURTAqCIaEoAFBFNCYAioikB
      UEQ0JQCKiKYEQBHRlAAoIpoSAEVEUwKgiGh3lUaUZRlRFOd+liTe/sf/SWV7Lzeq67C40rFZ
      Pv9alLIsUXbkTcoauklOz8OonXu9qvQQv9h7luVrl9F+6RC/PnaZztYmJEsCrlgzAFI4wLUz
      Rzh7pZqhaYnUFDtXju7nfGU1t4aDZGcloQIGGy7ww58dYt7yJURpZC4dfIW3TjeycH4cL+05
      TkFBIdp7jg8gM9rXiRczZv1nqFo7O8S+Q0d478A+mroHCeliSXZE33n7+Bs/IpS4Cof5X91t
      is/oHnsAmfGREA8/+yybShycOFMJcpjmqnJOnSljyhugpb6O2RB4Jwdo7hoi5Bnj3KmTXLvZ
      iSQGaK6vpbG2itIL1/CFJdrqqnGHYHqgk/bBKcK+KS6fO83FykbEO7MV6W6q5mTpeUZnAgy1
      1bDv/YtYoqPvVEjzjTZxfVCP1tOPSJjOzl5Wbfs6zz33HCWZjjvfYOLWdapHzDzzzDOsX5qP
      NHSTCz0anv3GE3iaz9E+GgQgMDtOrCXI9ZZRxICXlqFpghMDiHoLeWkpqAUv1ddv0lB5iYuV
      DYTCPhrqG/GHob/lBgOjo+x58ee8tu8wDd2j+KeHOV96kmuNXciyxEB7HSdPnqa1b3xufACL
      i6eefhqnQcXGrz/HivkuWm42MNzfRW1TD8mZ84jShWmvr6L6+jXOXa7GF5LwTw1y5tQJrtS0
      ElbKmd0Xn+EQSGJiZJzo2BhuXT1J3ZSRghQVb+4v5VbNRRr7pmksO0XbmIeDb+0haX4J0w0n
      udI6wMnDh/AYE/G3lXKtc5byY+8w7Iehpqtcbuql9L2DaBPy0fdf4kTtKAADDZc4XjVIYWYs
      r7y6F4srA4fNzpLFCzBrATnEyaPnWbvlITS3qzTHJ6bSXPYe/+cnP6W+b+pOy4c6Wxge6Wbf
      6y/y+rsXGerrwZqQhEajxxGrY3DMfeezyUWLGLh5E990L6a4LLQAkofrlTcIilO8/fJBolOz
      6Lp8lLb+MU6fOM1sEOovHqZ9xkJGmoucgsVkOHQcOXgUZ+4Chi4doLrPzb53T1G0sAjJO8sn
      P23h5/yR/Rw+WU5AkrlVW86gO8Sl4+/iM6eiH6vhyOUWTr/9Fsachbj0ITwfrTav+Fe55/46
      GBjm1X/4/xgJZfCD/3shV9/8Ic3TA4SGTKRlFFAcZ6T0Zi2qQS/r1xr4+YtthIylCKo4lhhA
      Z4oiMSEBn0mNP/TRTdYs9dXNRHl0WHRm5lnmXu1v7SRx/kaSMtPQT7+DV2NAp9MRHRONBpi6
      dYPLzQO4te/R2dNLeVUn2zY/xhJgoPYEh8pq8NjH6PLamW8xkr2ghGc35PLaz37EiDMLSRRB
      BkkGnfaDr68yp2Pov0BH8wzJBcV0tbTc1VpDrINkpw2jVnVnaKPfEFQaTEYDkjUaU2iK6uYW
      ZjQGdGYn83RalhemcmjfQbIWbSAnB/iEos4iRrZ97XEyHUaOXph7Ta3V4XC6sKlyqKrqYff6
      1Rw5tp82WyaP58z/5Akpfif33APo9E6+9ed/zbrEad6/eJPUnBwsUU42bNxAdlIs8WnzmWk8
      z7g5nfjoeHKzY0gqWM661UuxGj5+0Gw2aRjs76OnfwSwkJvrJD6riA3rVxNnmlsZk/NzGGio
      o6vlOoGYbGI0d08nJmMZP/z7v+WFbz5HZmoKq0vSqKwop7u/n4bmHtIyUli++Qme3rWezKLF
      jNeX0dHRwowQS1bxMnztVXR2t9E6oiI3JfquaS9K0HKwVqQw6bec66i16AgzPNjLwOgkIBAT
      HcVQXw9uIYpcVywZhUtZv2YpBiGAxTmP3TvW0nr9KrPip01Si06jvmuVlsQQY8N9XKusJysn
      F59k4Gu7d2OYvEnHcPDebVR8Jp96EgwCMQ47roQk8ubNR/K6yVy4mgTtDB29w8QnZRAXG4Mt
      2kJOQQkOq5mikmIGO1qZCqhIT0slPj6e+HgH1pg4HE4n8+dl0n+rh+TcQjLTUli6dDGzQ10M
      ToXIyEzHoFURZU/GaQzSMeRj+86tROk12Ox2nE7nx9IaZ7fjdCURoxdoaW7DmrGQtSVZqIS5
      1UhnjiMnyUrbrRFWbdqKy+agKNtOU/sAq7bsJNE6t6JrDBbibA4yMlOJdjhJdzmwO524nAnY
      7Q6cDifxDjtOl52oaBvxCankpsTQOzhBXvFiUpITSc/MIjDajWhysmZlCSPd7UwGtGRlpBCa
      HqCtb4olD60jIcZ4ZyW32mw4453o1Spi4uw4nQ60agFLtJ34eButlefxauJIzFvA6uJMdPhp
      aGrFkbeShdnxqJQdwO/trurQoigqj0R+UYgBTr2zj/lbnyfZ+qAb89WlBEAR0ZR/hCkimhIA
      RURTAqCIaEoAFBFNCYAioikBUEQ0JQCKiKYEQBHRlAAoItr/DyrNSHZg6WpaAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue by hour weekly' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Round trips % for Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Round trips &amp; member trips' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aXAc55mg+eRR94XCUbjvkwBB8BQlUqSog7Il27JlS3bb7h7bPT3RHRsd
      sxOzs1d0xG7vj925Onr3R3dsbM+03B67fcmWbVm3dZCUSFGkeIAgTuK+gUIV6r4zc38UCZEi
      QAIgLhL5/JDIYtabb2blm9/7fd97CJqmaejobFPEzVZAR2czWXcDUBRly8nSNG3NZG3F69sO
      stbqN7yvRoC19NbWStZW1Gm7yFoL7isD0NFZa3QD0NnW6Aags63RDUBnW6MbgM62RjcAnW2N
      vNkK3AlN01A1DVEQEARh4fPh6QDvXxgiP8fKlx5pQBKFO0jZXDRN42LfFO39M9SX5/Foa/kt
      16KzuWz4CBCJp3j3wiBjs6Elj1E1jXfOD/C/v3SCv/n5GU5fHVv4N03TeP3jPr5zvBW3w8K1
      Md9GqL1q0orK1SEvP3h2N1O+MKFocrNV0rmJDTeAX53ooq40l/cuDBKKJvGH4rx/cYhfvH+V
      GX8ETdO41DfF2c5xDjaXUpBjo2/MRzCS4P1Lw/zi/U7mgnH+/G9e4+fvXUW8/vYfmPDzs3c7
      uDo0u9GXdEckUUBVVToGZwnHUlhMhs1WSecmNtwFUlSVolw7TpuJX3zQSTSeYsYfAUHgjbP9
      NFcVMDQ1TyqtMDITxGUzsb+phP/v9xc43FLGu31D7K4vIt9lpbXGQ8fgLDXFbk62j/BHT+7k
      N6e6qSx04bCaVqTX5FyYM1fH2FVbSEN53ppdrySKfOuJnXQOe3nxWDNGg7RmsnXundUZgKbh
      906jyDbynGZGxqepqChlanKa0pIiYok0Nqt50a8+ua+GX53ooqooh0AkQa7TwgeXhjHIInaL
      kY87x/Dk2HBYjWQUjRl/hDNXx5jyRZicCyOJAh2Ds8wFY0zOhagpyWU+EicUTRKJpUimFWRJ
      vGXL/W4+t6pq/PiddkwGmY86RvmLr+7nTMcYuS4LXznUgCTe20BpNRs40FRyTzJ01gdhNeHQ
      aipC78gcmUQQk2zE48llZGgYoy0HVZKw2hxUlxYC2eAnSbr1raeqGpeuTfHDNy8zNhtCEOBO
      WhgkEUEQEARIZRQqPC6aKvMpK3By4tIw/nCcfQ0lTMyF+MuvP0RpvmNhnpHrsPDVRxtvMYJE
      Kk0wksDjtiMIAqqq8b/8w7v8u28d4lcnuhiaDvAf/vxJLvROYTLKtNUWLqlbJpNBltdmINVl
      LR9N01BV9bZna6WsShNBtiArMab8YUqKPDgddsxON9FgiLSmIKaTBPMLsMvZiL3P29hHHWOI
      okA6o2CUJVIZBQH4vA3cMIy0ot7y2bg3hKZpDE/NMz0fIZNRUTWNjKIyOOHjjY/7mPRF+N4X
      WnnpjXbyXWYebi4DIBRN8utTPeQ5LdgtRp7YWwXAwR2l/N8vn8VpNVJe4ORCzwR9434ea6sk
      k8kseS8UReFs5zijs0Ge3FtNnsu6mlu6IGut2A6yVFW95+C61RmAKGCQZcrLKyhwGrnaM0Bl
      XSNJpx+z2cDw2CxWg4h03XO42Uo1DbzBOA1lueQ5rUz7o4iCgCQJpDPqredBQLvJLG4Yi6Jp
      jHnDoGlYTAaSaYXByXn84Tg/fa+THZUFTPki/O3L56grzWVsNkxzVZpcp4VR7xx7G4ppq/Xw
      397pWHgbfe1IE1VFObhsZqqKc2gfmOHYnmpK853cyYManQ0RjKX48qEmXjnVzfef2b2aW7rA
      Wr1pH3RZmqYhCMLmjAAgUlXXsPC3nPyi7B+sxQDsyslf8ptTvjCxRIqzXRP0jvkQBQFV01Az
      2sIbX5ZEMkr2rX4DSRRIZbJvD0EQsJhkYok0yXT27ZxIZUimM7gdZkamA5QVOBiaCiAI4A3E
      kK9bY1NFPr94v5OPOkaJJzOMzYY43z3BtXEfDpsJi0kmo6rsayhe1p0wSCKxZJpoIr2wIqVz
      /7Dhy6Bjs0Em5sJc7Ju65SEXhOyKiUHOPvyfR1Gzx9ktRjRNI5ZIY5BEZElEFAUyioqiaISi
      SaKJNN5AjO8/sxtJFNlZ48Fpy64KmY0yf/x0KyaDxA+e2c1vPuwmlkxTV5ZH17AXoyzx8dXx
      ZV9PcZ6dndUeLvRO8o3HmtfgDulsJBu+DDoXijPhDTMfjt/yuaax6IP/eW688Y2yRDqjoCmw
      p76I4jw7p9pHUVQNh9VIWYGTS9em8bhtHGwuJRxL8knXBOF4iif2ViFLIk6bCbvFSDSRyrpX
      aYVYIn3LhDmaSKGqGleHvHQPeynKs/PMwbpbjtlRWcCOyoI1ukM6G8mGG0A4lsRhNeINRJd1
      /Ocnx6IgYJBF3E4zc4EYXz7UwMx8lB2VBbx5th8Ai1Gmbncuu+uKcNlN/Py9TnyhGIlUBk+O
      jf/zxx/y/JEmXnrjEr5gHI/bxuhskCf2VlNR6MIfipPOKPSN+fjd6V5EQcBmMfKXzx/g1dO9
      zAVjFOTYFtU3Ek/x/sUhqopyaK3x6GEPW5wNd4GePViPJArZie8yfOYbD79Adh4gSyKFbjsz
      /iiqqvHup4MMTPj57Uc9VBbl8N89fwBvMEb3iJdYMs3fvXKOKV+YPfXFTM6FObKrgtoSN4Fw
      AlWDbz3Rgt1i5M++vJcdVQWoqkZhrp1//kMH//X1S3zlUAPPPlzPlYEZTraP4A3EcFhNjHtD
      i45Yr5zq5uHmMgYm/Yx7bw33iMRTzC7T8HU2hg0fAZw2E7tqi0imFfrH/eS7rPhCMdBuXwa9
      gXD9Px63jWl/hGgivTBRjibSxFMZIvEUZqPM//u7TynKtbOjqoC//815/vsXDvK7j3o40zHK
      /sYSfvjmZWpLcynMtfH62WvYzAYmvCFUVVtY73/pjUv84JndnLk6zn/86WkMksTu+iJK8x08
      1FTKyye68OTYePfCIN9+ouWWm6hpGgZZxCBJC/MWgGl/hDfOXsPtMJPvsnFkV8V63WKdFbAp
      4dDH99dQUehCEAT81+cCiz38gvCZC6RpMBeIoWlgkEWUm96+mqaRTCs8+3A9R3dV8hfP7aO9
      f4YJb4j/8M8fYTLK/OBLeyjMtVOS56CttpDR6QCFbhtXBmZwOyzkOi0L8upKc/n1yW7a+6f5
      4kN1/N2/eYZcp4WKQheikB29vvBQLXazkWg8dYvOzx1u5P2LQ3jcNioLXQuf9435OLKrgi8/
      0sD57gkGJv1bLkF8O7LhI4CmZeOBTAYZs1HGajYwF4wteqzDaiISS2GURZJpBbvVSCyRRgOa
      qwvoGvIuGI6qavhDcexWI33jfrqHvfyrr+zl9NWx7LxBEukb85HvsvL7073kOi2oGhhkicbP
      xf4c2VVBIJLAYjLw7qeD/OL9TiqLXBjl7Jqzx23lpdcvUZRnx2G7NebI7bAsuhq0r7GYlz/o
      4pVTPdSX5dI76sMXjPPQjtJ7vqc6q2fDDWBmPsK//8lHPNJSRjKdIZ5ML3qcACiKupATAJBK
      Z/cBJFFgeCqAdH0ZNJnOsKe+CLvFSCqjsLe+iNGZAK+fvYZBkrCZDdjMRoanAuQ5LYDAhd4p
      9jQUo2ka3s8ZoCAIuB3ZEeHLhxr4PMf31y78+U67xDdjMxv5/jO7efV0Lw83lyFLIicuD+sG
      sMlsuAGMTAdoqy0kmkijqhpFeXamfJHbjtOAWDL7tldULTtxFgXUjIbbZsFpNSKIAoMT81QX
      u9nXWIyiaHzpkXr+y2sXMcgSiWSGiJLiZPsIV4e8xFNp3jrXT3VRDs8+XMfobIjH91Tx7oWh
      hfOqmsbpjlEmvGGe2l9D/jJDGzRN4/dn+rg6NEtrTSHPHKxb2Hy7+Zi9DcW89nEfkijytUcb
      7+VW6qwBGz4HaKsrwmSUGPeGkGURb+Czt69405KhcNP6p6ZpmI0yRlnCZjYSiiYZmg4wOx+l
      vjyPZw7WcbStivlwnOHrn//gmd28+Hgz6YxKgcvKlC+MJ8fGlx9pIJVRCcdTRBNppv1RCt2f
      LWkOTs4TT2bwuG38Xz/5kHfODyzLV/cGYox7Q9SUuOkZneN3H/XedswfPh3kbNc4mgbffnIn
      GVXlh29e5kdvXSYSSy0iVWe92XADMBtlvnt8F4+2VvDE3mpcNhM3HntV0xbibiRRRIOFpdKM
      opLOKDhtJnLsZjKKiiQKJNMZqopzcNlMfOFgHZNzEco9ToLRJNP+CKmMcj3iVGBoKkD/hJ+9
      DUX86bO7+erhRtIZhS89Ur+gn8kgM+4N8csPOnFYTIRjSXyhWzftFsPtMDM7HyUaTxMIJ+gY
      nEFVbzWccW+IbxzdQV2pm7HZIB9cHOb5I0188WAdH1waWkKyznqyqnDolbBYODTAyfYR/u6V
      c1hNBuKpNLIoEk1k5wMC2Rj6eDIDApgNMvVluQxNzxONZ10nDWisyKOyMIdch5lvP9W6IDuR
      yvAPr15gZ42H2fkoJ9tHKMq1YzJItNYUYjJI1Ja6qSpy3xbopmnw9785RzCawO2wEIwk+R++
      9ciSiSw3h/cm0xn+j386SU2JGwGBeDLNvsYSHmnJRqKeah9hZCaIqmp893grF/ummPFHSKYV
      dlQV0Fjm3nJhx1tV1lqFQ29aVYgjrRU80lKG1WzAYjR89vALWc8nmVYwG2VUVSOVyeCwmmit
      LkSSRArcNgpyrIzNhFA1jba6oltkm40yexuKsZkNDE8HqCrKIRpP8e0ndzIfjlNVnMOpy8P4
      Q7evPgkClOY7eHJvDaFokj9+upVEKsNLb1ziH1+/xPQi85UbmAwye+qL2VtfTPeIlxeONTPh
      DWX3OciuLn3z8Wb+5OldyJLIgaYS2uqK2Fnjob4sd+1urs6yWZ0BaCoDvd109fYTmvfS0XGV
      YCjA5fZO4vEIvmXsdoqiwJ99eS8et41gJPGZ6OvjUUZRiSezAW92i4lrEz4iiRTO60ujTpuJ
      /+k7h8ixmWisyKNvzMd8OJ7NH8goHNhRgjcQY2DCj91iJJbMRmumMgplBU5ynZYFo/s8Xznc
      iNEg8SdP76KswMXJ9mG+9Eg933y8mVNXRm47/uPOMV56/RInLg/ztUcb0TSN2hI38WSacCyJ
      2ZB94wmCgMkgL0SNCoLAyEyQ9v4ZfvL2lSX12YoMTPr59ckupnzhzVblnlidC6SmuXy5gzQS
      LruV2qpirlxqx+wsIJSIYTFaad5Rj6CpKIqCeIeUwmgizb/9+3eYC37mZ8uSiKppGGURp9VE
      IpXBbJSJpzLsqMzHbDSQURT+7YsH+dHbV8hzWnHZjAxOBdhdX8SlvilUTeO5w4389sNeRAFa
      qj3MzEfZ11DEiUvDlBY4eXxP1ZJ6+UNxXj/bj8NqZEdFPhf7p7EYDZR7HLeESseTKV75sI/v
      PrWTX53s5ukDtTitRiLxFOe6J2iuKqAo177keX701hW+98VdXO6fQVUV9jasTeqkqqp3vO/3
      IiuaSPObUz185VA9v/6wh+9/oW3ZoeDrqddqWJUzpippRLMdm5Igo2SIxRM4iqtRQl6ssoDN
      pBFJg8uYVe5OSjptEv/6Gwf53146sfDZjRibknwnc4EYgiAQjqVoqytk2h9hZ7WHcDzFj9+5
      ypP7avng4hBffbQJi3mc35/u43/89mFSaYUfvd2OQRIJxlN0Dc/x3KONFLptfO8Z921zk3A8
      xcsfdKFpGk/sreZ0xyjffrKVgUk/wWiSLz3cQEZRKci5dVnUZDCganCpf4aZ+SiSJCJJEi67
      heMH6u56L3fWePjZ+12kMwovHttxzz4twMnLI/RP+HA7rTx/pIm1CMe7WS9JUhElEdkgIwrZ
      611JLsRaXCNkR9B7NYDVjQCaxvTkGEmMlOQ7GRmbpqq6mng0jMVsZHx6jsryMgRh6UnwzVwd
      muU//ew04Wjq+ptfQhAg32WlrMBJ14gXk0HGaTXSUu3hoR2l1JflYjEZSKQy/OPrF5mci9BW
      V0hLVcFCroE3GONff+MgM/4IV4dmMRpkYokUx/fXYpSFWyZjfzg/QGNFPh63jV+f7CLHbiGR
      SnPm6jgt1QX84JndC5GdiqrSOeQl32XFk2Mho8LP37uKLImkMgpferiewju89W9GUVV+9u5V
      Ysk0BxqL2XOPI4Cmafzwzcv8i6dbefPcIAd3lOJxLx65ulwWm7heG/fR3j/DIy1llBY470nW
      alirSbD013/913+94m8JAnanixynHUk2kJvrRhQFTCYToiST4/osjVDTtEWtNJVWuDbh59Oe
      SS72TTHti+C0mReywsoKnEQSKRRVQ1E0ntxbjckgcbStkot907QPTHNt3MevTnSxr7GYR3aW
      A3CgqZRpf5RpfwRJEpmcC9M77kcASguc1JflceLyME0VebfoZTbKvHthiOHpeWpKcjnaVsFr
      Z/r4/jO7SaUVrCbDQlLN70/3YpQlPu2dJM9pIc9lo2Nolm893kJ+jpXe0TlqStzLupWDk/MA
      fP3oDl4/e21NXKD+CT8jM0G8gRgHm0tvqWqhaRpvftLPh+2jGA3SsoxjMVcjz2mluapg4Z4s
      l7V0gZZ6tlbCpqwCKarKT9/toH/cz+9O92IyysiyRDSRoijXTmN5HmOzIexm40IplJPtI7TW
      FtIxOMsLx3ZwbE81GUXjcGs5pzvGiCXSGGWJaCKNPxznL7/+UDb8YTqAzWxgdDZENJ4inkzf
      tkObTGfoGvHSWuPhib3VPLQj+9BUl7gZng4wMhO8Jdl9dj7K1SEv494Q1yb8QDap/sfvXOG9
      C4McaFp+eENRrp2+cR/vXRwix754KZk7MR+O35JcJAgCLxxrZnddIX/y9C4M8q1vyBu77j94
      djdnu5af+fagsim1QVNpBYMssbehmB+/c4VgJEE6o1BVlEP/hJ+MopJjN+MLxbGYZI62VRJP
      ZRgY9/PYnmpe/qArmwKpqtSU5GA1GUilFQ61lqNcXz262DfF8HSA5sp83vykn798/iHePt/P
      7roinnm4npvjT399sptDO8u52DdFgctKnjP7sH/jsR2MTAd5uKUMs/GzW5XntDLlD1NVlMPk
      XHYVpKE8j9pSd9YvXUESjM1s5LtPtTIbiFKaX76i+9g5NEv7wAyqprG/sYSmimwutigIFOXa
      keXb3YMcu5mJuTDneyax6lXqNscAzEaZco+TV0/30lieh6pphGMp+sZ8C4WtYok05R4ns/Mx
      fvNhDxUeJ18/uoP6slzKPU5EQSCaSDE2G+LfvPjwwkaVKEt864kW+sb8zAVjhGLZt/6FvknK
      Cpw8sacagyQulOfQNI3x2RCvnekjo6jsqPwsoV8SxUVdmYeaS/nD9RCJXTfVDFpNAS1BAJvF
      SLXFuOzAuhv0jM7x7MP1qKrGyfbhBQO4E1azgRce28HYbIhvHNNzmDfFAARB4GhbJUfbKpkN
      RPnpHzpQVe16uHH2wUykMvSO+TDKEod3lhOOp3ikJeta3HgbGw2WhajNGyRSGaZ8EVprPLjt
      ZmbnIwvZYN98vAWzSb4ltieezOC0mXDZTQxMzFO2jAldWYGTbz2xE0VVsRgXn4T1jfnoHpnj
      sd2Vq3Jt7kbW9Unw/7x8lrICJ1870rTs77odt9+37cqm9wfw5NioKHTx3OEGRDFb/S2jZCdK
      hW47kiRisxgWXI07kcoo/OSdK0x4Q/zsvat874ttWEwGmiry+Ks/OUJz1e2J6yaDhMkoU+5x
      UZrvWHbxWqvZsGT90flwnHPdExzaWcYrp7qXJW+lvHKqh68+2khtaS4vPNa87KhVnVvZEv0B
      ntpXwyunutE0jQNNpfRP+JkPxzHIIql0ho7BWZ7cV83wdICT7aNIosiLx5qxXS+R8ruPernQ
      O0U8leZgcxlH2yr5p7faqSvL5d/90aE7nluSRL77VCtDU/McaCq5bYK8GhRVwyBLmAzyHUs+
      3ismg4xRFlHUu1fT0FmcLWEAdqsRq9nArtpCPu2d5OkDtXzSNUFGUfnWEztJpDK8eKyZH711
      iT8+votJX5i//eVZSvId7Kr18MbZa/z7P3+SV0/3ca57gnA0SVNl/rIno0aDROMy/Oflku+y
      0lCex1vn+m+JNF1LvvRwPW+d66exPP+eyjFudzYtGvRm4sk0//nnZ4jGU8yHE1jNBvbUZ7O1
      rGYDxXkOgtEEk94Q+Tk2JufCtNZ4ONJWyT++dhFvMIbbYaFvdI4/fXYPrXcoZgufdRlfiw2Z
      rRgpuR1kbWpx3LXGbJSzBariKZqrChidCSKKAodaynHZzbxx9hrH99cSjSWpLs7hQFMp75zv
      RxAE8l1WfvDsHoanA3zzWLP+NtRZEZs+CQboHfNdj5xMMTwdYF9jCS88toMPr4yS77Kiqho2
      swGr2YDbbqGswMk3HmumKNfOc482IksidaW5+sOvs2K2hAF0Ds3yF1/dT21p7kIWV/+EH5vF
      SDqjoKga//Fnp5kLxokl0yhqdqOsoTzvnptX6GxvNn0O0Dfm47WP+/CH4sSTGUryHYzNBpkL
      xvj60R1UeFxIkkBDeR5/9V/e58VjzYx5Q/zREztXrZM+B7j/ZT0wc4APr4zwF8/t59enuhGA
      QDSx4NLM+KMU5FgZmgowOhOkuaqAPfXFW6IRXv+4n/cuDjHtC1NS4ODFYy3rsuG1XqiqxrsX
      BvEGonzhobptu4+wKv9BUzL09/Vw9vxF5uemuXKlA79/jouXOohEQ/gCS6cN3qaAKPK3v/yY
      y9em8YXiRGLZag0Wk0z3iJcdFQU8c7AOk0Gma2iWv/qv72OQJT7ZxEAuTdM4cXkYm9lAVXEO
      R9sq+bD99kyxrUzXiBerycDzR3fw2pm+zVZn01hdhxhJprauHqV/kLn5MC1NNXRcbsdgzaGz
      ZwCzyYLT2Yh4PSPsTl5Wfakbkyxy7JlK3jw3wLMHa7l4bZp0RsGTYyXHbiStqIx7gzy1r5r2
      wVm+eriB35/pI5lWiCfTHN1VgUFemS2rqrri2Jtb0DScViOnrowSjaf44kO19yaPe2sf5A/F
      ee1sP7Ik8o0jTSwSB3cLFqNE73yE8ZkgJoN41zZQa8UD0SIJwDc1Sl5ROYGpISKRCPbiGojO
      ISBjMQnE0uAyZX+Fpfy0dCbbCrV3zMe0P8rRtkrqyvJRNZjyRzi8sxx/JIFBEgGB5qoC3vhk
      gF980IXVZMBkkCnOs/PuxSG+cmj5RaZu3LTV+qKqqnGotYLRmSD/8tndlHlW3pZ1KVar0weX
      R3nxWDPBaJJTHWMc31d1R1k1JXkoarY97AvHWhaNHF0LvdZL1ia3SAKzqwCb3YzbUsPo+DTV
      VRXEo3asZiMTMz6cxrvvwn7cOc6+xhKsZiPt/dNcvDZFY0UeDeV5TPsj/P1vzuOwmhBF2N9Y
      wuX+Gf7XPz5Cab6DM51jGGQRWZLYyEgAVdX45z9coTDXzrQ/wuN7KjAZjRunwBKU5Dv4uHOc
      cCxJS5XnrscLQjaEey17It+PrNoA7PZsyp9kMFFdXXnLZ+Wly+uv5bneBb5jcIaHm8twWI1M
      zIUxyhKJtILLZiKtqDy+p4aR6QDPHW5YeHscainng0tDTPnCfOGh2rucae1IpbNJ/k8fqOXl
      E11E4+ktYQCHW8sZnJjHaJAo97hQlHtzx7YLm7oK1FiRjyQJCGR7h9ktRg7uKMMbjDIfjlNd
      7Oa3H/VglCVe/FzsuigKPLmvZlnnUTWNkekAeU7rslwVTdNQVA1RvD25xWSUKMy1LVkderMQ
      BYE6vbbQitn0fYDF0LRs3ZmhqXmO7KpciP+/sYasahrvfTrIpC/ME3urKfe47ijvtTN9mI0y
      IzNBvnakkVyH5Y77AJeuTXO5fxqBbAeZO4VIr+Ua+YQ3SMeQl4eby+55SXUrrt2vpaz7vjLc
      YkQTKc5cHcMXilFXmsvx/bW3pCLeYHgqgCAIfOepVv7w6eBd5c7MR9nfVEJrjYcJ793zCi5d
      m+L7X2xjT30RncPeVV3LSokl07z5ST+t1R5+daLrtrqiOuvDkgaQyWRIJmJkNuiH0DSNX37Q
      hdth4dWPepfsGwDgsBqZ9kfon/BjMd45gSUcSxKNp/ibn5/h5OWRW1Iel6K2JJdXTnXzae8k
      9aUb41akM9lSkPkuK6Io6N1jNoglx6JLl84zPT5KYVUrD+3ZmNxRVVVpLM/2640lM0u6Hvku
      G4/trmRkJshXH23kg4tDGA0Sh3aW39aV8dq4nyNtleyuK+SHb17GIEt3fbiOtlUshGUvNgKt
      By6bmR0V+bx8ootHWyuQ1iAxR+fuLDkHuHT2JM6iCiTZQVXZ6pNFVjIH6Bye5VzXJHVluYs2
      kVvMf3zrk37KPE6i8RQZReVw663fiyZS/OefncEoS+xvKuHpA7V6LNADIGvdY4Hm5kMU1Thw
      u+48wVxLWqo8y1rDvpl0RsFuMSKQ9fUB/OE4vz3VgwbUlbp5Ym81+xqL+eX7nWuvtM59zZIG
      4LLJnDn9Ebv2HaK+YmUP5XqSzij89sMeQrEUT+6r5viBWt45P4BBFhd6d526PLKQJ/Cjty5T
      nOdgbDaE1bz56/U6W4slDSAcTVBRXc789CRsIQPoGJyltjTbBf6f3rrMnz67h+cO3xoG0VSR
      z9vn+pEkkWN7qnFYjEzMhXj+6PJLh+hsD5Y0gLKyci519HL0i89vpD53pSTfwdvnBgjHU3hy
      Fq9r2VSZLXKratpCmO9ya3XqbC+WNIDxsTEsNgvz/nlKcrdOrHih286XHqnHF4pzpHXpbus3
      N76GbOK9Bg9MOUBN03jn/AAT3vDCosHnV8B07s6ia229V85xbWwGVVUJBoMbrdMduVE2vbE8
      b9k16cdms4WyXv6gk/7rxWzvd4KRJJF4ih88u5uR6QDpjF4baKVomrb4CNC46yHCkRhzoQTF
      RbdXU7vf+LRnguePNCFLIm9+0k/tA+AO2SwGApEkJy6PoMGaFPTablzom1raBYrGYrhcbkyL
      7bRqKt2dHchWN1YxhXc+hNNhY2pmnsqaCowmJ55lNojYCA62ZEsUioLAsT3Vm/0S788AABII
      SURBVK3OilE1Dd/12kc3HnSDnO1hNu4NcXRXxYo6tOhk0dQlRgAAQTZQXFyMzbJItGMmgTcQ
      xRxXSLsctO1sorO7F1EUGBsdRRYN2B17MYl3zwhbCavNJvK4LHz7yRbQslXgFEW594ywe9Rp
      JbJ+82EvBlkkGE3yR080L1TCEAWo8DjQNJXM51ygrZrFtZUywnbXeZY2ABNpLly8ROv+w7js
      n6skLJvIsZlIqSJ2g0D71R4KK+rIj/nJAJNTcyB8lgm2Vj2hbsia9IUxSBI2i4EpX4Tqopy7
      hg7cvPt4rxlhd5K91rIyikosmeZfHGvj92f6CMXSFCyx+rWRem22rHXPCAtH45TXVBJYbB9A
      kNi1Z9/CXxfWYvKypcXLyqvuSamlUBSVn77XycW+KWpL3Gga7Kor5ELvFN96omVdzrnZSKJA
      cZ6D//b2FWxmg178a41Z8rVZWlbOQGcPJTV373S4UZzrmWBoKsD//J3DeIMx8nOsPNZWSSSe
      2mzV1g1BEDi+v4bvHm/lG4/tWFH3GZ27s6QBjI6NkpObRzoZX+qQDSfPaaUk38E//P4iZqOM
      0SDx0huX2dtQdPcv38cIgoAsifo6/zqwpAukKiqsneu+JjSU5yHLMoFIgn0NxXrIsM49s6QB
      KKqCvAXfONu9isGDSiyZJhpPke+ybuhIt6QBHH/2eVRVQzboEZQ664s/FOc3H3aT57Tispt4
      fAP3apb0IbraLzAXiDxwbkY6o/DO+QE+uDSMoujhA1uBgQk/B5pK+eqjjQxNBTb03Es+3VWV
      5fz+5Z/wi5d/hz+a3Eid1pX3LgxRWZRDvsvKqSv3Vz3PB5WdNR4uXZviH1+/xMEdy28yvhYs
      6QJdu9bPkaefo6m6hPRWmw3fI5qmZTdS2HpznO2IxWTge1/cvSnnXnIECEXjGJQgF7uGsZo2
      vYr6mvHkvmrGZkP4wwmOtC0dTq2zPVj0ye69co6ZuQDhWIL6nQc3Wqd1xSBLHN9fk03W17vL
      bHu2ZGW4pVjLigJ6VYj7W9a6V4W4ePEcE0P9FNfvZ/+uhns6iY7OVmVJHyDmm8JeWInT7thI
      fXR0NpQlDSCeAaukEI4u3u4ok06TSqXRNI10+tb/qxtZsF9H5x5Y2hlTMkxOzxIMDFNRWUGB
      8+bEGI2O9ku4C0uR0jFCsThGg8TcfJSSshKsdveyY9YfNBKpDB+2j1BVnENdaR5bMJpE5yYW
      NYCh/m5srlySwShHjx/93MMPoOHOyWFqahp3jpPmxjq6eq4hApMTY4hMYd27H/MWyQhbjPXK
      CHv5g04O7yzjXM8kZoNEcd7yU0O3aubVVpW1bj3CSitqmJia5cjRx7BYLLcfoKqkr6/uOM0y
      7Z29FFfWkRf1o4ki45NexHXKCFurFYS1kvV5ORlVozDPQa7TSiqjrvgcWy3zaqvKWquMsCWX
      QU+88WumIxp7Dz5KQ+Xq4+232zLo7HyUdy8MUprv4Ehb5YoSWLbicuNWlbWuy6DR4BzToST1
      tdX45nxwDwaw3fC4bXznqdbNVkNnmSxqAAajhebmFgo8xRR4Vl8aXUdnq7OoAUzNzOJ0Oin0
      5OtpeDoPNIvuAwiZBCdPneLUqVOMz8xvtE5bBk3TmJmPMB+Oo3csejBZdASoqNvBbv8cI9N+
      NOHBCoVeCed6JpnwhojEUzzaWqFXmH4AWXIn2BcM01hXyfTU1Ebqs6UYmpznCwdqeWpfDT2j
      c5utjs46sOQyaDwSZMobpLKqHOke5gH38zLo5FyYNz/pRxTgxWMt2K2350dvxSXC7SBrrZZB
      lzSAK+dOITgLcVhdVFXo+wDrrZMua2Wse6Ns37yfjgtnmPFvrf4AOjpryZKmWFxUQiQlY5A0
      FFVD0stv6zyALDkCTM3N07argb5PTzM0G95InXR0NowlDaC8uJDu7kH2PXacwpxFAuJ0dB4A
      lnSBpiZGmZ6cIreimXrzg9FY7kFB0zReOdVDIJKgsTyPR3fp1S1Wy5IjgKughNwcJ2QWL4qV
      SUa53NFNyDfLlSsdzM/7uHT5KtFoCF9g8SwynbVhxh/FbJT502d30zvm22x17msWHQGUTJqM
      CseePM7g2O0bQJqmMTw8hiTDjD9IS1MNHZfbMdrcXO0dwGy04nI2IGjbLyFmI2S5bAYm5oK8
      dW4Am1le9Dq2ahLLfZEQEw3MMjAwSDAcY++Bh28/cSZBNJ5genaG0pIKotEo9qJqtMgcNqOE
      xQTRNLhM2y8hZiNkybLM95/ZgzcQpTjPsWTOwVZLYllLWevaIsmZX4rbKhLw+5idm8dVUXjL
      v0sGC227d1MTDmM1GRgZn6a6qpJ41IHFbGBixofTqC+bridGWaI037nZatz3LGmKiUQSxDv3
      o3I4siVTamqqALA7svmvFWUla6Sejs76sqQBlJWVIToLkTW9xInOg8uSq0DzgXkun/8Ib0Df
      BNN5cFlyBGjZfZBWAQSj7mfqPLgsOQJ0Xr1CIh5mYGh0I/XR0dlQljQAk8GAL5hhb1vTRuqj
      o7OhLF0cd36Gzp4uhsZnN1IfHZ0NZUkDcObm0tjUiJZMbKQ+OhtIOJbkfM8E0URqs1XZNJY0
      gEQ8wYWzp4ik9XIIDyLpjMLLJ7owGWR+8X4nmW3aMXNRAwjNTRDVbHzru3/GnuaqDVZJZyNI
      phSsJgO7agsxypJuADfT2TvA4QMt9A+O6H0UV8DYbIh//kMHp6+OrVkA4HphsxioKHTx0uuX
      aCjPw2TYnuVvFt0HsBo03nj7BBlFweZw0FRVvNF63Ze8c36A7zy1k7fPDTAzH6Uod/ml0Tca
      QRA4tLOcQzvLN+X8/lCc9y8OUVnkYn9jyaZVIFzUANoeeoy2hzZalfsfWRLwBmIEo0nMxgen
      tex68OrpXr72aBMfXhlhbDZERaFrU/TQ+4SuIS881kzP6ByP7a7EZTNvtjpbGkEQSGUUUhll
      UwsurK5NqqYy1N9PKKlQ7slhbNpLaUkRI6PTNNRXkFRk8nOyw79eF0iXtZiscCzJB5eGqSl2
      01JdsGIXaN0LY90N38wEA+Nz5Dis1FWVcKX9CoLRTjyTxmy00NLShHg9I0xco4bUa2lMqqqu
      iV5rqZMua2WsxW+4OrNWFYy2HCziDBklTSAYwlFcgxjzYcgIGCSBmJ4RpstaR1nrmhF2VwSR
      aNBHXkkFRXlOxidnqS4vJhFzYDYbmPb6cZn0BVSdrc+qXaDlos8BdFnrIWvda4Pq6GwHdAPQ
      2dboBqCzrdENQGdboxuAzrqjKCrpzNpVhFtL9IAVnXUlEEnwq5NdSKLAIy3l1JXkbLZKt6CP
      ADrryvnuCb5woJbvPrWLT3smN1ud29BHAJ11pa2uiNc+7sNilGmpKthsdW5D3wjbIjo9yLLi
      yTTpjIrTZtpyG2H6CKCz7lhMBiymzdZicfQ5gM62RjcAnW3Nql0gVVXRAFEQFuKyb47P3qwc
      Tx2dlbBKA1AZHRxgyh+kJM9FMBLFajExOxeirLIMs9WFx711E8J1dG6wSgMQyclxkMBAUkvT
      2txAZ881RFFgYnwMSZjCtmcfZlHvEabLWj9Z69Yj7O5nTnHlag8FJeU4TBLtnb0UVdSRH/Wj
      igITk15E4bNMMD0jTJe11rLWKiNM3wfYIjrpslaGnhCjo7MG6Aags63RDUBnW6MbgM62RjcA
      nW2NbgA62xrdAHS2NboB6GxrdAPQ2dboBqCzrdENQGdboxuAzrZGNwCdbc2qDUBTFTIZBU1T
      icXiaJpGPJ5A0zQyaxjzraOznqwyLlVjdLCHmObEJsaJpzOgKQTDKQqKPdgduRTk2NZWUx2d
      dWDV+QCZVIThsXk0LUldZQldvQNEowkUMojItOzZh0XS9B5huqx1k7V5PcI0hZGhISZmYtRV
      F9Le2UtJVT15ET+CLDI24UWWBCQpq5yeEabLWmtZekbYPaBnhN3/svSMMB2dNUA3AJ1tjW4A
      Otsa3QB0tjW6Aehsa3QD0NnW6Aags63RDUBnW6MbgM62RjcAnW3NPRtAOhmjv3+QdDrF0NAI
      ipImHImvhW46OuvOPRvAyPAoRQVOOi9fIJVK0XltkCmvj/WNMNLRWRvuOSpJEyUsFjNWt4do
      YJ4MKjZRI5TScJn0Nkk6W5t7NoCi/By6eoeprm8k7nRgNRsYGp/FZtQffp2tz7qFQ98QuxWT
      KdYqlHYtddJlrYz7olH2jR5Oqqquiby1lAWsiayten3bQRbc+2+4bgZwI1tHEIQ1S4lcK1ma
      pqFp2prI2orXtx1krdVvuO4ZYTo6W5l1dYEANCVFT08vzvwSkqEZHHnlaJkEHk/Bsr4/MzmK
      1x/C4ylgLhChosgNRgd2s2HlumgKVzq6qS7zMOGLUlbgRLK4sJpWdhs0TWNsqB/FYMOoxtFM
      LkyiSn6Bh5X2B9fUDL3d3ci2HExaEsnqxiAoK5alZlJc7eylZddOJob6iWsG3FaJaFrCaTXg
      ys1HFpcnUM0kudp1jZbWZkYHrhHPSLgdBpKaCbtJJDe/AHGZykWDfsa8IZrqqvDPjBNVzSSD
      07iLq1BSCTwF+cu+xkhgjklfjLrKIq71D1BYWMjo5Az11eXEMwK5zmVWItE0Jkf6EBxl678T
      PD83S0FZHdHAHKpgYKz/CsMjYwSjiWV9v6CoDJdFYnRyDrOYobdvkKnpmVXpMjU6TFxRmZsP
      IpOkv3+VspQIA8OzpNMZYmmF4MwIQ8PDeOdDKxalKkmisTThcJhERsU3NcTQ8Ai+QHhlcjQw
      SjIqkFTALqaYCiRIRXwMDg4x4/UtX5YKRklCQ6CyuhYtHSMQSZEIzjI0NMy0d37ZsmSTFS2d
      QEkn8AbDxEJzaBgY6u5mZGSYcGL5vZplsx0lFcM3OUQwruKbnsVsMdLV3cP4xDTLd2U0cnLs
      hMOJ9TcAWRJJJBJkVHBaDVjsTlzuHOZ8/mV9f3y4H0teOXtaagiGosgWO1pmecbzeeYDAYLe
      aZw5uURCMSSbEyW9il1rQSLP40FMRnG7XWRkO253DkG/d8Wi1FQcU04BspohN8eBZrDjzstl
      3je7IjmywYgsZd/KmUyGVCpDeXE+kSS43G7iocDyZRlNSKIAaPT1dFPT2EJFUS6xtIjLnUss
      uLzfDsBkNgMQ9M2SSCaZmg1js8pYXXby83OYnZxbtizzdVmSbKCwqIiMwUgmEsIoGjELKvHl
      WoAgYjIZs9e67LOvEkdeEYHhIUrKK7CKCo6CMnyT4+QVeZb1fUEQ8U6NY6mpo7a2DoOk4gun
      V6VLS9s+yoJBXE4nRtmALCjMx1ZRxU60UJRnJi1ayM1xYjI5iYfmMDmX59bdjGzNxSkNIheX
      kZNjw2RzE5mfxeouXJGcRCRIPJNmcmoWT56LhGrE7XQi11WjJCMo0vILlcXC8yQyaSanvIii
      wOjICLU1FdTVmsnEQ2gmx7JlzU6NkcmkEW0F7CosJRyOY5Qht8jM7MQoJRXLew4AZiZGyGTS
      SM4KBO8UVZVVJOMRLCYD49PzWJbpMmqqwvCYl6Ri0CfBOtsbPRpUZ1ujG4DOtkY3AJ11QVXS
      +P1+kunlr/KslFQyTiyRWvbxmXSSjHKrx7/uk2Cd7UlgpIO3u0MYMxEe3ddCVLNgM0ImrSCT
      Ii5YEZMBJLsHIRXCH4ghRkbpibp5dEcx04EEOxsrudrRRXFFNfH5aSSHhxJPDjNjQ8Sx8M6v
      f8LBZ75Jdb6FQDiJK8fMxEyIco8LyWInGg4SmQ+QMVgpy7Pyh1dfpv6J7yGMnaEzZOXorhrd
      AHTWj0goRF15Dq+++ja2PA+yGmH3gYe42jnK8SM7+NnrH5PrKUBNhil3mzA6cymtrGNudpD2
      Tz6mv7eagw/v5L0PThAKBHDnFfDCs4f4+MowllSQ4qoGdjVWcuHd3xFx1DJ/6QJNpU7evOJj
      z6HD9LafJxY0YDKn6NZUGmor0QCnzUZFbhUfvvumbgA664Mkm2nbs5+HmgqJemcprmnCPztB
      Q20dw73XmPQlKMhzUNfUxMzYIHYbWAtKuDrUSyjlJa8gH3eRh96uHiSTnQK3Ql1TI8hWrMRI
      mWzYDFkP3mx3UbGjkYHENCOzMeqrShjs7cVosWEx2IEwJlFheGqOuloBR14Bk1cHcXvK9GVQ
      na1LcG6Kq129lNS3UV3sXpdz6Aags635/wHtOWE7Kj+fWgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Single Trips by Duraion' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
